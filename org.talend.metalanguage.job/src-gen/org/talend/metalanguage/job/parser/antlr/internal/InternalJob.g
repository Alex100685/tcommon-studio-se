/*
* generated by Xtext
*/
grammar InternalJob;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.talend.metalanguage.job.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.talend.metalanguage.job.parser.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.xtext.conversion.ValueConverterException;
import org.talend.metalanguage.job.services.JobGrammarAccess;

}

@parser::members {

 	private JobGrammarAccess grammarAccess;
 	
    public InternalJobParser(TokenStream input, IAstFactory factory, JobGrammarAccess grammarAccess) {
        this(input);
        this.factory = factory;
        registerRules(grammarAccess.getGrammar());
        this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected InputStream getTokenFile() {
    	ClassLoader classLoader = getClass().getClassLoader();
    	return classLoader.getResourceAsStream("org/talend/metalanguage/job/parser/antlr/internal/InternalJob.tokens");
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "ProcessType";	
   	}
   	
   	@Override
   	protected JobGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleProcessType
entryRuleProcessType returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getProcessTypeRule(), currentNode); }
	 iv_ruleProcessType=ruleProcessType 
	 { $current=$iv_ruleProcessType.current; } 
	 EOF 
;

// Rule ProcessType
ruleProcessType returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getProcessTypeAccess().getProcessTypeAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getProcessTypeAccess().getProcessTypeAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(	'addParameters' 
    {
        createLeafNode(grammarAccess.getProcessTypeAccess().getAddParametersKeyword_1_0(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getProcessTypeAccess().getLeftCurlyBracketKeyword_1_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getProcessTypeAccess().getParametersParametersTypeParserRuleCall_1_2_0(), currentNode); 
	    }
		lv_parameters_3_0=ruleParametersType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getProcessTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"parameters",
	        		lv_parameters_3_0, 
	        		"ParametersType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'}' 
    {
        createLeafNode(grammarAccess.getProcessTypeAccess().getRightCurlyBracketKeyword_1_3(), null); 
    }
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getProcessTypeAccess().getNodeNodeTypeParserRuleCall_2_0(), currentNode); 
	    }
		lv_node_5_0=ruleNodeType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getProcessTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"node",
	        		lv_node_5_0, 
	        		"NodeType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getProcessTypeAccess().getConnectionConnectionTypeParserRuleCall_3_0(), currentNode); 
	    }
		lv_connection_6_0=ruleConnectionType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getProcessTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"connection",
	        		lv_connection_6_0, 
	        		"ConnectionType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getProcessTypeAccess().getNoteNoteTypeParserRuleCall_4_0(), currentNode); 
	    }
		lv_note_7_0=ruleNoteType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getProcessTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"note",
	        		lv_note_7_0, 
	        		"NoteType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getProcessTypeAccess().getContextContextTypeParserRuleCall_5_0(), currentNode); 
	    }
		lv_context_8_0=ruleContextType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getProcessTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"context",
	        		lv_context_8_0, 
	        		"ContextType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*)
;





// Entry rule entryRuleParametersType
entryRuleParametersType returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getParametersTypeRule(), currentNode); }
	 iv_ruleParametersType=ruleParametersType 
	 { $current=$iv_ruleParametersType.current; } 
	 EOF 
;

// Rule ParametersType
ruleParametersType returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getParametersTypeAccess().getElementParameterElementParameterTypeParserRuleCall_0_0(), currentNode); 
	    }
		lv_elementParameter_0_0=ruleElementParameterType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getParametersTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"elementParameter",
	        		lv_elementParameter_0_0, 
	        		"ElementParameterType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getParametersTypeAccess().getCommaKeyword_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getParametersTypeAccess().getElementParameterElementParameterTypeParserRuleCall_1_1_0(), currentNode); 
	    }
		lv_elementParameter_2_0=ruleElementParameterType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getParametersTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"elementParameter",
	        		lv_elementParameter_2_0, 
	        		"ElementParameterType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)
;





// Entry rule entryRuleExternalData
entryRuleExternalData returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getExternalDataRule(), currentNode); }
	 iv_ruleExternalData=ruleExternalData 
	 { $current=$iv_ruleExternalData.current; } 
	 EOF 
;

// Rule ExternalData
ruleExternalData returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getExternalDataAccess().getMapperDataParserRuleCall_0(), currentNode); 
    }
    this_MapperData_0=ruleMapperData
    { 
        $current = $this_MapperData_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getExternalDataAccess().getDBMapperDataParserRuleCall_1(), currentNode); 
    }
    this_DBMapperData_1=ruleDBMapperData
    { 
        $current = $this_DBMapperData_1.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleDBMapperData
entryRuleDBMapperData returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getDBMapperDataRule(), currentNode); }
	 iv_ruleDBMapperData=ruleDBMapperData 
	 { $current=$iv_ruleDBMapperData.current; } 
	 EOF 
;

// Rule DBMapperData
ruleDBMapperData returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getDBMapperDataAccess().getDBMapDataAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getDBMapperDataAccess().getDBMapDataAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'addDBMapData' 
    {
        createLeafNode(grammarAccess.getDBMapperDataAccess().getAddDBMapDataKeyword_1(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getDBMapperDataAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
(	'addInputTable' 
    {
        createLeafNode(grammarAccess.getDBMapperDataAccess().getAddInputTableKeyword_3_0(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getDBMapperDataAccess().getLeftCurlyBracketKeyword_3_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDBMapperDataAccess().getInputTablesDBInputTableParserRuleCall_3_2_0(), currentNode); 
	    }
		lv_InputTables_5_0=ruleDBInputTable		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDBMapperDataRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"InputTables",
	        		lv_InputTables_5_0, 
	        		"DBInputTable", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'}' 
    {
        createLeafNode(grammarAccess.getDBMapperDataAccess().getRightCurlyBracketKeyword_3_3(), null); 
    }
)*(	'addVarTable' 
    {
        createLeafNode(grammarAccess.getDBMapperDataAccess().getAddVarTableKeyword_4_0(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getDBMapperDataAccess().getLeftCurlyBracketKeyword_4_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDBMapperDataAccess().getVarTablesDBVarTableParserRuleCall_4_2_0(), currentNode); 
	    }
		lv_VarTables_9_0=ruleDBVarTable		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDBMapperDataRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"VarTables",
	        		lv_VarTables_9_0, 
	        		"DBVarTable", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'}' 
    {
        createLeafNode(grammarAccess.getDBMapperDataAccess().getRightCurlyBracketKeyword_4_3(), null); 
    }
)*(	'addOutputTable' 
    {
        createLeafNode(grammarAccess.getDBMapperDataAccess().getAddOutputTableKeyword_5_0(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getDBMapperDataAccess().getLeftCurlyBracketKeyword_5_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDBMapperDataAccess().getOutputTablesDBOutputTableParserRuleCall_5_2_0(), currentNode); 
	    }
		lv_OutputTables_13_0=ruleDBOutputTable		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDBMapperDataRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"OutputTables",
	        		lv_OutputTables_13_0, 
	        		"DBOutputTable", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'}' 
    {
        createLeafNode(grammarAccess.getDBMapperDataAccess().getRightCurlyBracketKeyword_5_3(), null); 
    }
)*	'}' 
    {
        createLeafNode(grammarAccess.getDBMapperDataAccess().getRightCurlyBracketKeyword_6(), null); 
    }
)
;





// Entry rule entryRuleDBInputTable
entryRuleDBInputTable returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getDBInputTableRule(), currentNode); }
	 iv_ruleDBInputTable=ruleDBInputTable 
	 { $current=$iv_ruleDBInputTable.current; } 
	 EOF 
;

// Rule DBInputTable
ruleDBInputTable returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getDBInputTableAccess().getInputTableAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getDBInputTableAccess().getInputTableAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'NAME:' 
    {
        createLeafNode(grammarAccess.getDBInputTableAccess().getNAMEKeyword_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDBInputTableAccess().getNameEStringParserRuleCall_2_0(), currentNode); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDBInputTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	'MINIMIZED:' 
    {
        createLeafNode(grammarAccess.getDBInputTableAccess().getMINIMIZEDKeyword_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDBInputTableAccess().getMinimizedEBooleanParserRuleCall_3_1_0(), currentNode); 
	    }
		lv_minimized_4_0=ruleEBoolean		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDBInputTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"minimized",
	        		lv_minimized_4_0, 
	        		"EBoolean", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'READONLY:' 
    {
        createLeafNode(grammarAccess.getDBInputTableAccess().getREADONLYKeyword_4_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDBInputTableAccess().getReadonlyEBooleanParserRuleCall_4_1_0(), currentNode); 
	    }
		lv_readonly_6_0=ruleEBoolean		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDBInputTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"readonly",
	        		lv_readonly_6_0, 
	        		"EBoolean", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'TABLENAME:' 
    {
        createLeafNode(grammarAccess.getDBInputTableAccess().getTABLENAMEKeyword_5_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDBInputTableAccess().getTableNameEStringParserRuleCall_5_1_0(), currentNode); 
	    }
		lv_tableName_8_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDBInputTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"tableName",
	        		lv_tableName_8_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'JOINTYPE:' 
    {
        createLeafNode(grammarAccess.getDBInputTableAccess().getJOINTYPEKeyword_6_0(), null); 
    }
((
(
		lv_joinType_10_0=	'NO_JOIN' 
    {
        createLeafNode(grammarAccess.getDBInputTableAccess().getJoinTypeNO_JOINKeyword_6_1_0_0(), "joinType"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDBInputTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "joinType", lv_joinType_10_0, "NO_JOIN", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_joinType_11_0=	'INNER_JOIN' 
    {
        createLeafNode(grammarAccess.getDBInputTableAccess().getJoinTypeINNER_JOINKeyword_6_1_1_0(), "joinType"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDBInputTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "joinType", lv_joinType_11_0, "INNER_JOIN", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_joinType_12_0=	'LEFT_OUTER_JOIN' 
    {
        createLeafNode(grammarAccess.getDBInputTableAccess().getJoinTypeLEFT_OUTER_JOINKeyword_6_1_2_0(), "joinType"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDBInputTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "joinType", lv_joinType_12_0, "LEFT_OUTER_JOIN", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_joinType_13_0=	'RIGHT_OUTER_JOIN' 
    {
        createLeafNode(grammarAccess.getDBInputTableAccess().getJoinTypeRIGHT_OUTER_JOINKeyword_6_1_3_0(), "joinType"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDBInputTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "joinType", lv_joinType_13_0, "RIGHT_OUTER_JOIN", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_joinType_14_0=	'FULL_OUTER_JOIN' 
    {
        createLeafNode(grammarAccess.getDBInputTableAccess().getJoinTypeFULL_OUTER_JOINKeyword_6_1_4_0(), "joinType"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDBInputTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "joinType", lv_joinType_14_0, "FULL_OUTER_JOIN", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_joinType_15_0=	'CROSS_JOIN' 
    {
        createLeafNode(grammarAccess.getDBInputTableAccess().getJoinTypeCROSS_JOINKeyword_6_1_5_0(), "joinType"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDBInputTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "joinType", lv_joinType_15_0, "CROSS_JOIN", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_joinType_16_0=	'LEFT_OUTER_JOIN_ORACLE' 
    {
        createLeafNode(grammarAccess.getDBInputTableAccess().getJoinTypeLEFT_OUTER_JOIN_ORACLEKeyword_6_1_6_0(), "joinType"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDBInputTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "joinType", lv_joinType_16_0, "LEFT_OUTER_JOIN_ORACLE", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_joinType_17_0=	'RIGHT_OUTER_JOIN_ORACLE' 
    {
        createLeafNode(grammarAccess.getDBInputTableAccess().getJoinTypeRIGHT_OUTER_JOIN_ORACLEKeyword_6_1_7_0(), "joinType"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDBInputTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "joinType", lv_joinType_17_0, "RIGHT_OUTER_JOIN_ORACLE", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)))?(	'ALIAS:' 
    {
        createLeafNode(grammarAccess.getDBInputTableAccess().getALIASKeyword_7_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDBInputTableAccess().getAliasEStringParserRuleCall_7_1_0(), currentNode); 
	    }
		lv_alias_19_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDBInputTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"alias",
	        		lv_alias_19_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDBInputTableAccess().getDBMapperTableEntriesDBMapperTableEntryParserRuleCall_8_0(), currentNode); 
	    }
		lv_DBMapperTableEntries_20_0=ruleDBMapperTableEntry		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDBInputTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"DBMapperTableEntries",
	        		lv_DBMapperTableEntries_20_0, 
	        		"DBMapperTableEntry", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*)
;





// Entry rule entryRuleDBVarTable
entryRuleDBVarTable returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getDBVarTableRule(), currentNode); }
	 iv_ruleDBVarTable=ruleDBVarTable 
	 { $current=$iv_ruleDBVarTable.current; } 
	 EOF 
;

// Rule DBVarTable
ruleDBVarTable returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getDBVarTableAccess().getVarTableAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getDBVarTableAccess().getVarTableAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'NAME:' 
    {
        createLeafNode(grammarAccess.getDBVarTableAccess().getNAMEKeyword_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDBVarTableAccess().getNameEStringParserRuleCall_2_0(), currentNode); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDBVarTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	'MINIMIZED:' 
    {
        createLeafNode(grammarAccess.getDBVarTableAccess().getMINIMIZEDKeyword_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDBVarTableAccess().getMinimizedEBooleanParserRuleCall_3_1_0(), currentNode); 
	    }
		lv_minimized_4_0=ruleEBoolean		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDBVarTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"minimized",
	        		lv_minimized_4_0, 
	        		"EBoolean", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'READONLY:' 
    {
        createLeafNode(grammarAccess.getDBVarTableAccess().getREADONLYKeyword_4_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDBVarTableAccess().getReadonlyEBooleanParserRuleCall_4_1_0(), currentNode); 
	    }
		lv_readonly_6_0=ruleEBoolean		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDBVarTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"readonly",
	        		lv_readonly_6_0, 
	        		"EBoolean", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDBVarTableAccess().getDBMapperTableEntriesDBMapperTableEntryParserRuleCall_5_0(), currentNode); 
	    }
		lv_DBMapperTableEntries_7_0=ruleDBMapperTableEntry		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDBVarTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"DBMapperTableEntries",
	        		lv_DBMapperTableEntries_7_0, 
	        		"DBMapperTableEntry", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*)
;





// Entry rule entryRuleDBOutputTable
entryRuleDBOutputTable returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getDBOutputTableRule(), currentNode); }
	 iv_ruleDBOutputTable=ruleDBOutputTable 
	 { $current=$iv_ruleDBOutputTable.current; } 
	 EOF 
;

// Rule DBOutputTable
ruleDBOutputTable returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getDBOutputTableAccess().getOutputTableAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getDBOutputTableAccess().getOutputTableAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'NAME:' 
    {
        createLeafNode(grammarAccess.getDBOutputTableAccess().getNAMEKeyword_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDBOutputTableAccess().getNameEStringParserRuleCall_2_0(), currentNode); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDBOutputTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	'MINIMIZED:' 
    {
        createLeafNode(grammarAccess.getDBOutputTableAccess().getMINIMIZEDKeyword_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDBOutputTableAccess().getMinimizedEBooleanParserRuleCall_3_1_0(), currentNode); 
	    }
		lv_minimized_4_0=ruleEBoolean		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDBOutputTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"minimized",
	        		lv_minimized_4_0, 
	        		"EBoolean", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'READONLY:' 
    {
        createLeafNode(grammarAccess.getDBOutputTableAccess().getREADONLYKeyword_4_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDBOutputTableAccess().getReadonlyEBooleanParserRuleCall_4_1_0(), currentNode); 
	    }
		lv_readonly_6_0=ruleEBoolean		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDBOutputTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"readonly",
	        		lv_readonly_6_0, 
	        		"EBoolean", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDBOutputTableAccess().getDBMapperTableEntriesDBMapperTableEntryParserRuleCall_5_0(), currentNode); 
	    }
		lv_DBMapperTableEntries_7_0=ruleDBMapperTableEntry		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDBOutputTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"DBMapperTableEntries",
	        		lv_DBMapperTableEntries_7_0, 
	        		"DBMapperTableEntry", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDBOutputTableAccess().getFilterEntriesDBFilterEntryParserRuleCall_6_0(), currentNode); 
	    }
		lv_FilterEntries_8_0=ruleDBFilterEntry		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDBOutputTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"FilterEntries",
	        		lv_FilterEntries_8_0, 
	        		"DBFilterEntry", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*)
;





// Entry rule entryRuleDBMapperTableEntry
entryRuleDBMapperTableEntry returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getDBMapperTableEntryRule(), currentNode); }
	 iv_ruleDBMapperTableEntry=ruleDBMapperTableEntry 
	 { $current=$iv_ruleDBMapperTableEntry.current; } 
	 EOF 
;

// Rule DBMapperTableEntry
ruleDBMapperTableEntry returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getDBMapperTableEntryAccess().getDBMapperTableEntryAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getDBMapperTableEntryAccess().getDBMapperTableEntryAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'addColumn' 
    {
        createLeafNode(grammarAccess.getDBMapperTableEntryAccess().getAddColumnKeyword_1(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getDBMapperTableEntryAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
	'NAME:' 
    {
        createLeafNode(grammarAccess.getDBMapperTableEntryAccess().getNAMEKeyword_3(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDBMapperTableEntryAccess().getNameEStringParserRuleCall_4_0(), currentNode); 
	    }
		lv_name_4_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDBMapperTableEntryRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_4_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getDBMapperTableEntryAccess().getCommaKeyword_5_0(), null); 
    }
	'TYPE:' 
    {
        createLeafNode(grammarAccess.getDBMapperTableEntryAccess().getTYPEKeyword_5_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDBMapperTableEntryAccess().getTypeEStringParserRuleCall_5_2_0(), currentNode); 
	    }
		lv_type_7_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDBMapperTableEntryRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"type",
	        		lv_type_7_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	',' 
    {
        createLeafNode(grammarAccess.getDBMapperTableEntryAccess().getCommaKeyword_6_0(), null); 
    }
	'NULLABLE:' 
    {
        createLeafNode(grammarAccess.getDBMapperTableEntryAccess().getNULLABLEKeyword_6_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDBMapperTableEntryAccess().getNullableEBooleanParserRuleCall_6_2_0(), currentNode); 
	    }
		lv_nullable_10_0=ruleEBoolean		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDBMapperTableEntryRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"nullable",
	        		lv_nullable_10_0, 
	        		"EBoolean", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	',' 
    {
        createLeafNode(grammarAccess.getDBMapperTableEntryAccess().getCommaKeyword_7_0(), null); 
    }
	'EXPRESSION:' 
    {
        createLeafNode(grammarAccess.getDBMapperTableEntryAccess().getEXPRESSIONKeyword_7_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDBMapperTableEntryAccess().getExpressionEStringParserRuleCall_7_2_0(), currentNode); 
	    }
		lv_expression_13_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDBMapperTableEntryRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"expression",
	        		lv_expression_13_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	',' 
    {
        createLeafNode(grammarAccess.getDBMapperTableEntryAccess().getCommaKeyword_8_0(), null); 
    }
	'JOIN:' 
    {
        createLeafNode(grammarAccess.getDBMapperTableEntryAccess().getJOINKeyword_8_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDBMapperTableEntryAccess().getJoinEBooleanParserRuleCall_8_2_0(), currentNode); 
	    }
		lv_join_16_0=ruleEBoolean		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDBMapperTableEntryRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"join",
	        		lv_join_16_0, 
	        		"EBoolean", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	',' 
    {
        createLeafNode(grammarAccess.getDBMapperTableEntryAccess().getCommaKeyword_9_0(), null); 
    }
	'OPERATOR:' 
    {
        createLeafNode(grammarAccess.getDBMapperTableEntryAccess().getOPERATORKeyword_9_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDBMapperTableEntryAccess().getOperatorEStringParserRuleCall_9_2_0(), currentNode); 
	    }
		lv_operator_19_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDBMapperTableEntryRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"operator",
	        		lv_operator_19_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?	'}' 
    {
        createLeafNode(grammarAccess.getDBMapperTableEntryAccess().getRightCurlyBracketKeyword_10(), null); 
    }
)
;





// Entry rule entryRuleDBFilterEntry
entryRuleDBFilterEntry returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getDBFilterEntryRule(), currentNode); }
	 iv_ruleDBFilterEntry=ruleDBFilterEntry 
	 { $current=$iv_ruleDBFilterEntry.current; } 
	 EOF 
;

// Rule DBFilterEntry
ruleDBFilterEntry returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'addFilter' 
    {
        createLeafNode(grammarAccess.getDBFilterEntryAccess().getAddFilterKeyword_0(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getDBFilterEntryAccess().getLeftCurlyBracketKeyword_1(), null); 
    }
	'NAME:' 
    {
        createLeafNode(grammarAccess.getDBFilterEntryAccess().getNAMEKeyword_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDBFilterEntryAccess().getNameEStringParserRuleCall_3_0(), currentNode); 
	    }
		lv_name_3_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDBFilterEntryRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_3_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	',' 
    {
        createLeafNode(grammarAccess.getDBFilterEntryAccess().getCommaKeyword_4(), null); 
    }
	'EXPRESSION:' 
    {
        createLeafNode(grammarAccess.getDBFilterEntryAccess().getEXPRESSIONKeyword_5(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDBFilterEntryAccess().getExpressionEStringParserRuleCall_6_0(), currentNode); 
	    }
		lv_expression_6_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDBFilterEntryRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"expression",
	        		lv_expression_6_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'}' 
    {
        createLeafNode(grammarAccess.getDBFilterEntryAccess().getRightCurlyBracketKeyword_7(), null); 
    }
)
;





// Entry rule entryRuleMapperData
entryRuleMapperData returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getMapperDataRule(), currentNode); }
	 iv_ruleMapperData=ruleMapperData 
	 { $current=$iv_ruleMapperData.current; } 
	 EOF 
;

// Rule MapperData
ruleMapperData returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getMapperDataAccess().getMapperDataAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getMapperDataAccess().getMapperDataAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'addMapperData' 
    {
        createLeafNode(grammarAccess.getMapperDataAccess().getAddMapperDataKeyword_1(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getMapperDataAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
(	'addUiProperties' 
    {
        createLeafNode(grammarAccess.getMapperDataAccess().getAddUiPropertiesKeyword_3_0(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getMapperDataAccess().getLeftCurlyBracketKeyword_3_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMapperDataAccess().getUiPropertiesUiPropertiesParserRuleCall_3_2_0(), currentNode); 
	    }
		lv_uiProperties_5_0=ruleUiProperties		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMapperDataRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"uiProperties",
	        		lv_uiProperties_5_0, 
	        		"UiProperties", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'}' 
    {
        createLeafNode(grammarAccess.getMapperDataAccess().getRightCurlyBracketKeyword_3_3(), null); 
    }
)?(	'addInputTable' 
    {
        createLeafNode(grammarAccess.getMapperDataAccess().getAddInputTableKeyword_4_0(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getMapperDataAccess().getLeftCurlyBracketKeyword_4_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMapperDataAccess().getInputTablesInputTableParserRuleCall_4_2_0(), currentNode); 
	    }
		lv_inputTables_9_0=ruleInputTable		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMapperDataRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"inputTables",
	        		lv_inputTables_9_0, 
	        		"InputTable", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'}' 
    {
        createLeafNode(grammarAccess.getMapperDataAccess().getRightCurlyBracketKeyword_4_3(), null); 
    }
)*(	'addVarTable' 
    {
        createLeafNode(grammarAccess.getMapperDataAccess().getAddVarTableKeyword_5_0(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getMapperDataAccess().getLeftCurlyBracketKeyword_5_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMapperDataAccess().getVarTablesVarTableParserRuleCall_5_2_0(), currentNode); 
	    }
		lv_varTables_13_0=ruleVarTable		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMapperDataRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"varTables",
	        		lv_varTables_13_0, 
	        		"VarTable", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'}' 
    {
        createLeafNode(grammarAccess.getMapperDataAccess().getRightCurlyBracketKeyword_5_3(), null); 
    }
)*(	'addOutputTable' 
    {
        createLeafNode(grammarAccess.getMapperDataAccess().getAddOutputTableKeyword_6_0(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getMapperDataAccess().getLeftCurlyBracketKeyword_6_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMapperDataAccess().getOutputTablesOutputTableParserRuleCall_6_2_0(), currentNode); 
	    }
		lv_outputTables_17_0=ruleOutputTable		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMapperDataRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"outputTables",
	        		lv_outputTables_17_0, 
	        		"OutputTable", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'}' 
    {
        createLeafNode(grammarAccess.getMapperDataAccess().getRightCurlyBracketKeyword_6_3(), null); 
    }
)*	'}' 
    {
        createLeafNode(grammarAccess.getMapperDataAccess().getRightCurlyBracketKeyword_7(), null); 
    }
)
;





// Entry rule entryRuleUiProperties
entryRuleUiProperties returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getUiPropertiesRule(), currentNode); }
	 iv_ruleUiProperties=ruleUiProperties 
	 { $current=$iv_ruleUiProperties.current; } 
	 EOF 
;

// Rule UiProperties
ruleUiProperties returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getUiPropertiesAccess().getUiPropertiesAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getUiPropertiesAccess().getUiPropertiesAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'SHELLMAXIMIZED:' 
    {
        createLeafNode(grammarAccess.getUiPropertiesAccess().getSHELLMAXIMIZEDKeyword_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUiPropertiesAccess().getShellMaximizedEBooleanParserRuleCall_2_0(), currentNode); 
	    }
		lv_shellMaximized_2_0=ruleEBoolean		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUiPropertiesRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"shellMaximized",
	        		lv_shellMaximized_2_0, 
	        		"EBoolean", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleInputTable
entryRuleInputTable returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getInputTableRule(), currentNode); }
	 iv_ruleInputTable=ruleInputTable 
	 { $current=$iv_ruleInputTable.current; } 
	 EOF 
;

// Rule InputTable
ruleInputTable returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getInputTableAccess().getInputTableAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getInputTableAccess().getInputTableAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'NAME:' 
    {
        createLeafNode(grammarAccess.getInputTableAccess().getNAMEKeyword_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getInputTableAccess().getNameEStringParserRuleCall_2_0(), currentNode); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInputTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	'MINIMIZED:' 
    {
        createLeafNode(grammarAccess.getInputTableAccess().getMINIMIZEDKeyword_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getInputTableAccess().getMinimizedEBooleanParserRuleCall_3_1_0(), currentNode); 
	    }
		lv_minimized_4_0=ruleEBoolean		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInputTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"minimized",
	        		lv_minimized_4_0, 
	        		"EBoolean", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'SIZESTATE:' 
    {
        createLeafNode(grammarAccess.getInputTableAccess().getSIZESTATEKeyword_4_0(), null); 
    }
((
(
		lv_sizeState_6_0=	'MINIMIZED' 
    {
        createLeafNode(grammarAccess.getInputTableAccess().getSizeStateMINIMIZEDKeyword_4_1_0_0(), "sizeState"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInputTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "sizeState", lv_sizeState_6_0, "MINIMIZED", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_sizeState_7_0=	'INTERMEDIATE' 
    {
        createLeafNode(grammarAccess.getInputTableAccess().getSizeStateINTERMEDIATEKeyword_4_1_1_0(), "sizeState"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInputTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "sizeState", lv_sizeState_7_0, "INTERMEDIATE", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_sizeState_8_0=	'MAXIMIZED' 
    {
        createLeafNode(grammarAccess.getInputTableAccess().getSizeStateMAXIMIZEDKeyword_4_1_2_0(), "sizeState"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInputTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "sizeState", lv_sizeState_8_0, "MAXIMIZED", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)))?(	'EXPRESSIONFILTER:' 
    {
        createLeafNode(grammarAccess.getInputTableAccess().getEXPRESSIONFILTERKeyword_5_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getInputTableAccess().getExpressionFilterEStringParserRuleCall_5_1_0(), currentNode); 
	    }
		lv_expressionFilter_10_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInputTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"expressionFilter",
	        		lv_expressionFilter_10_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'ACTIVATEEXPRESSIONFILTER:' 
    {
        createLeafNode(grammarAccess.getInputTableAccess().getACTIVATEEXPRESSIONFILTERKeyword_6_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getInputTableAccess().getActivateExpressionFilterEBooleanParserRuleCall_6_1_0(), currentNode); 
	    }
		lv_activateExpressionFilter_12_0=ruleEBoolean		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInputTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"activateExpressionFilter",
	        		lv_activateExpressionFilter_12_0, 
	        		"EBoolean", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'ACTIVATECONDENSEDTOOL:' 
    {
        createLeafNode(grammarAccess.getInputTableAccess().getACTIVATECONDENSEDTOOLKeyword_7_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getInputTableAccess().getActivateCondensedToolEBooleanParserRuleCall_7_1_0(), currentNode); 
	    }
		lv_activateCondensedTool_14_0=ruleEBoolean		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInputTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"activateCondensedTool",
	        		lv_activateCondensedTool_14_0, 
	        		"EBoolean", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'MATCHINGMODE:' 
    {
        createLeafNode(grammarAccess.getInputTableAccess().getMATCHINGMODEKeyword_8_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getInputTableAccess().getMatchingModeEStringParserRuleCall_8_1_0(), currentNode); 
	    }
		lv_matchingMode_16_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInputTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"matchingMode",
	        		lv_matchingMode_16_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'LOOKUPMODE:' 
    {
        createLeafNode(grammarAccess.getInputTableAccess().getLOOKUPMODEKeyword_9_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getInputTableAccess().getLookupModeEStringParserRuleCall_9_1_0(), currentNode); 
	    }
		lv_lookupMode_18_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInputTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"lookupMode",
	        		lv_lookupMode_18_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getInputTableAccess().getMapperTableEntriesMapperTableEntryParserRuleCall_10_0(), currentNode); 
	    }
		lv_mapperTableEntries_19_0=ruleMapperTableEntry		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInputTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"mapperTableEntries",
	        		lv_mapperTableEntries_19_0, 
	        		"MapperTableEntry", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*)
;





// Entry rule entryRuleVarTable
entryRuleVarTable returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getVarTableRule(), currentNode); }
	 iv_ruleVarTable=ruleVarTable 
	 { $current=$iv_ruleVarTable.current; } 
	 EOF 
;

// Rule VarTable
ruleVarTable returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getVarTableAccess().getVarTableAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getVarTableAccess().getVarTableAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'NAME:' 
    {
        createLeafNode(grammarAccess.getVarTableAccess().getNAMEKeyword_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getVarTableAccess().getNameEStringParserRuleCall_2_0(), currentNode); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVarTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	'MINIMIZED:' 
    {
        createLeafNode(grammarAccess.getVarTableAccess().getMINIMIZEDKeyword_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getVarTableAccess().getMinimizedEBooleanParserRuleCall_3_1_0(), currentNode); 
	    }
		lv_minimized_4_0=ruleEBoolean		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVarTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"minimized",
	        		lv_minimized_4_0, 
	        		"EBoolean", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'SIZESTATE:' 
    {
        createLeafNode(grammarAccess.getVarTableAccess().getSIZESTATEKeyword_4_0(), null); 
    }
((
(
		lv_sizeState_6_0=	'MINIMIZED' 
    {
        createLeafNode(grammarAccess.getVarTableAccess().getSizeStateMINIMIZEDKeyword_4_1_0_0(), "sizeState"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVarTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "sizeState", lv_sizeState_6_0, "MINIMIZED", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_sizeState_7_0=	'INTERMEDIATE' 
    {
        createLeafNode(grammarAccess.getVarTableAccess().getSizeStateINTERMEDIATEKeyword_4_1_1_0(), "sizeState"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVarTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "sizeState", lv_sizeState_7_0, "INTERMEDIATE", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_sizeState_8_0=	'MAXIMIZED' 
    {
        createLeafNode(grammarAccess.getVarTableAccess().getSizeStateMAXIMIZEDKeyword_4_1_2_0(), "sizeState"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVarTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "sizeState", lv_sizeState_8_0, "MAXIMIZED", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)))?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getVarTableAccess().getMapperTableEntriesMapperTableEntryParserRuleCall_5_0(), currentNode); 
	    }
		lv_mapperTableEntries_9_0=ruleMapperTableEntry		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getVarTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"mapperTableEntries",
	        		lv_mapperTableEntries_9_0, 
	        		"MapperTableEntry", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*)
;





// Entry rule entryRuleOutputTable
entryRuleOutputTable returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getOutputTableRule(), currentNode); }
	 iv_ruleOutputTable=ruleOutputTable 
	 { $current=$iv_ruleOutputTable.current; } 
	 EOF 
;

// Rule OutputTable
ruleOutputTable returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getOutputTableAccess().getOutputTableAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getOutputTableAccess().getOutputTableAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'NAME:' 
    {
        createLeafNode(grammarAccess.getOutputTableAccess().getNAMEKeyword_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getOutputTableAccess().getNameEStringParserRuleCall_2_0(), currentNode); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getOutputTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	'MINIMIZED:' 
    {
        createLeafNode(grammarAccess.getOutputTableAccess().getMINIMIZEDKeyword_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getOutputTableAccess().getMinimizedEBooleanParserRuleCall_3_1_0(), currentNode); 
	    }
		lv_minimized_4_0=ruleEBoolean		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getOutputTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"minimized",
	        		lv_minimized_4_0, 
	        		"EBoolean", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'SIZESTATE:' 
    {
        createLeafNode(grammarAccess.getOutputTableAccess().getSIZESTATEKeyword_4_0(), null); 
    }
((
(
		lv_sizeState_6_0=	'MINIMIZED' 
    {
        createLeafNode(grammarAccess.getOutputTableAccess().getSizeStateMINIMIZEDKeyword_4_1_0_0(), "sizeState"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getOutputTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "sizeState", lv_sizeState_6_0, "MINIMIZED", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_sizeState_7_0=	'INTERMEDIATE' 
    {
        createLeafNode(grammarAccess.getOutputTableAccess().getSizeStateINTERMEDIATEKeyword_4_1_1_0(), "sizeState"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getOutputTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "sizeState", lv_sizeState_7_0, "INTERMEDIATE", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
    |(
(
		lv_sizeState_8_0=	'MAXIMIZED' 
    {
        createLeafNode(grammarAccess.getOutputTableAccess().getSizeStateMAXIMIZEDKeyword_4_1_2_0(), "sizeState"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getOutputTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "sizeState", lv_sizeState_8_0, "MAXIMIZED", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)))?(	'EXPRESSIONFILTER:' 
    {
        createLeafNode(grammarAccess.getOutputTableAccess().getEXPRESSIONFILTERKeyword_5_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getOutputTableAccess().getExpressionFilterEStringParserRuleCall_5_1_0(), currentNode); 
	    }
		lv_expressionFilter_10_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getOutputTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"expressionFilter",
	        		lv_expressionFilter_10_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'ACTIVATEEXPRESSIONFILTER:' 
    {
        createLeafNode(grammarAccess.getOutputTableAccess().getACTIVATEEXPRESSIONFILTERKeyword_6_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getOutputTableAccess().getActivateExpressionFilterEBooleanParserRuleCall_6_1_0(), currentNode); 
	    }
		lv_activateExpressionFilter_12_0=ruleEBoolean		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getOutputTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"activateExpressionFilter",
	        		lv_activateExpressionFilter_12_0, 
	        		"EBoolean", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'ACTIVATECONDENSEDTOOL:' 
    {
        createLeafNode(grammarAccess.getOutputTableAccess().getACTIVATECONDENSEDTOOLKeyword_7_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getOutputTableAccess().getActivateCondensedToolEBooleanParserRuleCall_7_1_0(), currentNode); 
	    }
		lv_activateCondensedTool_14_0=ruleEBoolean		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getOutputTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"activateCondensedTool",
	        		lv_activateCondensedTool_14_0, 
	        		"EBoolean", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'REJECT:' 
    {
        createLeafNode(grammarAccess.getOutputTableAccess().getREJECTKeyword_8_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getOutputTableAccess().getRejectEBooleanParserRuleCall_8_1_0(), currentNode); 
	    }
		lv_reject_16_0=ruleEBoolean		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getOutputTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"reject",
	        		lv_reject_16_0, 
	        		"EBoolean", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'REJECTINNERJOIN:' 
    {
        createLeafNode(grammarAccess.getOutputTableAccess().getREJECTINNERJOINKeyword_9_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getOutputTableAccess().getRejectInnerJoinEBooleanParserRuleCall_9_1_0(), currentNode); 
	    }
		lv_rejectInnerJoin_18_0=ruleEBoolean		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getOutputTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"rejectInnerJoin",
	        		lv_rejectInnerJoin_18_0, 
	        		"EBoolean", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'ISERRORREJECTTABLE:' 
    {
        createLeafNode(grammarAccess.getOutputTableAccess().getISERRORREJECTTABLEKeyword_10_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getOutputTableAccess().getIsErrorRejectTableEBooleanParserRuleCall_10_1_0(), currentNode); 
	    }
		lv_isErrorRejectTable_20_0=ruleEBoolean		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getOutputTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"isErrorRejectTable",
	        		lv_isErrorRejectTable_20_0, 
	        		"EBoolean", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'ISJOINTABLEOF:' 
    {
        createLeafNode(grammarAccess.getOutputTableAccess().getISJOINTABLEOFKeyword_11_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getOutputTableAccess().getIsJoinTableOfEStringParserRuleCall_11_1_0(), currentNode); 
	    }
		lv_isJoinTableOf_22_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getOutputTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"isJoinTableOf",
	        		lv_isJoinTableOf_22_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getOutputTableAccess().getMapperTableEntriesMapperTableEntryParserRuleCall_12_0(), currentNode); 
	    }
		lv_mapperTableEntries_23_0=ruleMapperTableEntry		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getOutputTableRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"mapperTableEntries",
	        		lv_mapperTableEntries_23_0, 
	        		"MapperTableEntry", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*)
;





// Entry rule entryRuleMapperTableEntry
entryRuleMapperTableEntry returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getMapperTableEntryRule(), currentNode); }
	 iv_ruleMapperTableEntry=ruleMapperTableEntry 
	 { $current=$iv_ruleMapperTableEntry.current; } 
	 EOF 
;

// Rule MapperTableEntry
ruleMapperTableEntry returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getMapperTableEntryAccess().getMapperTableEntryAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getMapperTableEntryAccess().getMapperTableEntryAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'addColumn' 
    {
        createLeafNode(grammarAccess.getMapperTableEntryAccess().getAddColumnKeyword_1(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getMapperTableEntryAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
	'NAME:' 
    {
        createLeafNode(grammarAccess.getMapperTableEntryAccess().getNAMEKeyword_3(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMapperTableEntryAccess().getNameEStringParserRuleCall_4_0(), currentNode); 
	    }
		lv_name_4_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMapperTableEntryRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_4_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getMapperTableEntryAccess().getCommaKeyword_5_0(), null); 
    }
	'TYPE:' 
    {
        createLeafNode(grammarAccess.getMapperTableEntryAccess().getTYPEKeyword_5_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMapperTableEntryAccess().getTypeEStringParserRuleCall_5_2_0(), currentNode); 
	    }
		lv_type_7_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMapperTableEntryRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"type",
	        		lv_type_7_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	',' 
    {
        createLeafNode(grammarAccess.getMapperTableEntryAccess().getCommaKeyword_6_0(), null); 
    }
	'NULLABLE:' 
    {
        createLeafNode(grammarAccess.getMapperTableEntryAccess().getNULLABLEKeyword_6_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMapperTableEntryAccess().getNullableEBooleanParserRuleCall_6_2_0(), currentNode); 
	    }
		lv_nullable_10_0=ruleEBoolean		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMapperTableEntryRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"nullable",
	        		lv_nullable_10_0, 
	        		"EBoolean", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	',' 
    {
        createLeafNode(grammarAccess.getMapperTableEntryAccess().getCommaKeyword_7_0(), null); 
    }
	'EXPRESSION:' 
    {
        createLeafNode(grammarAccess.getMapperTableEntryAccess().getEXPRESSIONKeyword_7_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMapperTableEntryAccess().getExpressionEStringParserRuleCall_7_2_0(), currentNode); 
	    }
		lv_expression_13_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMapperTableEntryRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"expression",
	        		lv_expression_13_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?	'}' 
    {
        createLeafNode(grammarAccess.getMapperTableEntryAccess().getRightCurlyBracketKeyword_8(), null); 
    }
)
;





// Entry rule entryRuleNodeType
entryRuleNodeType returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getNodeTypeRule(), currentNode); }
	 iv_ruleNodeType=ruleNodeType 
	 { $current=$iv_ruleNodeType.current; } 
	 EOF 
;

// Rule NodeType
ruleNodeType returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'addComponent' 
    {
        createLeafNode(grammarAccess.getNodeTypeAccess().getAddComponentKeyword_0(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getNodeTypeAccess().getLeftCurlyBracketKeyword_1(), null); 
    }
	'setComponentDefinition' 
    {
        createLeafNode(grammarAccess.getNodeTypeAccess().getSetComponentDefinitionKeyword_2(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getNodeTypeAccess().getLeftCurlyBracketKeyword_3(), null); 
    }
(	'TYPE:' 
    {
        createLeafNode(grammarAccess.getNodeTypeAccess().getTYPEKeyword_4_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNodeTypeAccess().getComponentNameEStringParserRuleCall_4_1_0(), currentNode); 
	    }
		lv_componentName_5_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNodeTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"componentName",
	        		lv_componentName_5_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	',' 
    {
        createLeafNode(grammarAccess.getNodeTypeAccess().getCommaKeyword_4_2(), null); 
    }
)(	'NAME:' 
    {
        createLeafNode(grammarAccess.getNodeTypeAccess().getNAMEKeyword_5_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNodeTypeAccess().getElementParameterUniqueNameTypeParserRuleCall_5_1_0(), currentNode); 
	    }
		lv_elementParameter_8_0=ruleUniqueNameType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNodeTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"elementParameter",
	        		lv_elementParameter_8_0, 
	        		"UniqueNameType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	',' 
    {
        createLeafNode(grammarAccess.getNodeTypeAccess().getCommaKeyword_5_2(), null); 
    }
)(	'POSITION:' 
    {
        createLeafNode(grammarAccess.getNodeTypeAccess().getPOSITIONKeyword_6_0(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNodeTypeAccess().getPosXEIntParserRuleCall_6_1_0_0(), currentNode); 
	    }
		lv_posX_11_0=ruleEInt		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNodeTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"posX",
	        		lv_posX_11_0, 
	        		"EInt", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	',' 
    {
        createLeafNode(grammarAccess.getNodeTypeAccess().getCommaKeyword_6_1_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNodeTypeAccess().getPosYEIntParserRuleCall_6_1_2_0(), currentNode); 
	    }
		lv_posY_13_0=ruleEInt		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNodeTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"posY",
	        		lv_posY_13_0, 
	        		"EInt", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)))	'}' 
    {
        createLeafNode(grammarAccess.getNodeTypeAccess().getRightCurlyBracketKeyword_7(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNodeTypeAccess().getMetadataMetadataTypeParserRuleCall_8_0(), currentNode); 
	    }
		lv_metadata_15_0=ruleMetadataType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNodeTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"metadata",
	        		lv_metadata_15_0, 
	        		"MetadataType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'setSettings' 
    {
        createLeafNode(grammarAccess.getNodeTypeAccess().getSetSettingsKeyword_9(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getNodeTypeAccess().getLeftCurlyBracketKeyword_10(), null); 
    }
(
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNodeTypeAccess().getElementParameterSchemaElementParameterTypeParserRuleCall_11_0_0(), currentNode); 
	    }
		lv_elementParameter_18_1=ruleSchemaElementParameterType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNodeTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"elementParameter",
	        		lv_elementParameter_18_1, 
	        		"SchemaElementParameterType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

    |		{ 
	        currentNode=createCompositeNode(grammarAccess.getNodeTypeAccess().getElementParameterElementParameterTypeParserRuleCall_11_0_1(), currentNode); 
	    }
		lv_elementParameter_18_2=ruleElementParameterType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNodeTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"elementParameter",
	        		lv_elementParameter_18_2, 
	        		"ElementParameterType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)

)
)(	',' 
    {
        createLeafNode(grammarAccess.getNodeTypeAccess().getCommaKeyword_12_0(), null); 
    }
(
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNodeTypeAccess().getElementParameterSchemaElementParameterTypeParserRuleCall_12_1_0_0(), currentNode); 
	    }
		lv_elementParameter_20_1=ruleSchemaElementParameterType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNodeTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"elementParameter",
	        		lv_elementParameter_20_1, 
	        		"SchemaElementParameterType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

    |		{ 
	        currentNode=createCompositeNode(grammarAccess.getNodeTypeAccess().getElementParameterElementParameterTypeParserRuleCall_12_1_0_1(), currentNode); 
	    }
		lv_elementParameter_20_2=ruleElementParameterType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNodeTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"elementParameter",
	        		lv_elementParameter_20_2, 
	        		"ElementParameterType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)

)
))*	'}' 
    {
        createLeafNode(grammarAccess.getNodeTypeAccess().getRightCurlyBracketKeyword_13(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNodeTypeAccess().getMetadataMetadataTypeParserRuleCall_14_0(), currentNode); 
	    }
		lv_metadata_22_0=ruleMetadataType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNodeTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"metadata",
	        		lv_metadata_22_0, 
	        		"MetadataType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNodeTypeAccess().getNodeDataExternalDataParserRuleCall_15_0(), currentNode); 
	    }
		lv_nodeData_23_0=ruleExternalData		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNodeTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"nodeData",
	        		lv_nodeData_23_0, 
	        		"ExternalData", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?	'}' 
    {
        createLeafNode(grammarAccess.getNodeTypeAccess().getRightCurlyBracketKeyword_16(), null); 
    }
)
;





// Entry rule entryRuleContextType
entryRuleContextType returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getContextTypeRule(), currentNode); }
	 iv_ruleContextType=ruleContextType 
	 { $current=$iv_ruleContextType.current; } 
	 EOF 
;

// Rule ContextType
ruleContextType returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getContextTypeAccess().getContextTypeAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getContextTypeAccess().getContextTypeAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'ContextType' 
    {
        createLeafNode(grammarAccess.getContextTypeAccess().getContextTypeKeyword_1(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getContextTypeAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
(	'NAME:' 
    {
        createLeafNode(grammarAccess.getContextTypeAccess().getNAMEKeyword_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getContextTypeAccess().getNameEStringParserRuleCall_3_1_0(), currentNode); 
	    }
		lv_name_4_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContextTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_4_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'CONFIRMATIONNEED:' 
    {
        createLeafNode(grammarAccess.getContextTypeAccess().getCONFIRMATIONNEEDKeyword_4_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getContextTypeAccess().getConfirmationNeededEBooleanParserRuleCall_4_1_0(), currentNode); 
	    }
		lv_confirmationNeeded_6_0=ruleEBoolean		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContextTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"confirmationNeeded",
	        		lv_confirmationNeeded_6_0, 
	        		"EBoolean", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getContextTypeAccess().getContextParameterContextParameterTypeParserRuleCall_5_0_0(), currentNode); 
	    }
		lv_contextParameter_7_0=ruleContextParameterType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContextTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contextParameter",
	        		lv_contextParameter_7_0, 
	        		"ContextParameterType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getContextTypeAccess().getCommaKeyword_5_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getContextTypeAccess().getContextParameterContextParameterTypeParserRuleCall_5_1_1_0(), currentNode); 
	    }
		lv_contextParameter_9_0=ruleContextParameterType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContextTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contextParameter",
	        		lv_contextParameter_9_0, 
	        		"ContextParameterType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)?	'}' 
    {
        createLeafNode(grammarAccess.getContextTypeAccess().getRightCurlyBracketKeyword_6(), null); 
    }
)
;





// Entry rule entryRuleContextParameterType
entryRuleContextParameterType returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getContextParameterTypeRule(), currentNode); }
	 iv_ruleContextParameterType=ruleContextParameterType 
	 { $current=$iv_ruleContextParameterType.current; } 
	 EOF 
;

// Rule ContextParameterType
ruleContextParameterType returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getContextParameterTypeAccess().getContextParameterTypeAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getContextParameterTypeAccess().getContextParameterTypeAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'addContextParameter' 
    {
        createLeafNode(grammarAccess.getContextParameterTypeAccess().getAddContextParameterKeyword_1(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getContextParameterTypeAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
(	'NAME:' 
    {
        createLeafNode(grammarAccess.getContextParameterTypeAccess().getNAMEKeyword_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getContextParameterTypeAccess().getNameEStringParserRuleCall_3_1_0(), currentNode); 
	    }
		lv_name_4_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContextParameterTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_4_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'TYPE:' 
    {
        createLeafNode(grammarAccess.getContextParameterTypeAccess().getTYPEKeyword_4_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getContextParameterTypeAccess().getTypeEStringParserRuleCall_4_1_0(), currentNode); 
	    }
		lv_type_6_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContextParameterTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"type",
	        		lv_type_6_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'VALUE:' 
    {
        createLeafNode(grammarAccess.getContextParameterTypeAccess().getVALUEKeyword_5_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getContextParameterTypeAccess().getValueEStringParserRuleCall_5_1_0(), currentNode); 
	    }
		lv_value_8_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContextParameterTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_8_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'COMMENT:' 
    {
        createLeafNode(grammarAccess.getContextParameterTypeAccess().getCOMMENTKeyword_6_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getContextParameterTypeAccess().getCommentEStringParserRuleCall_6_1_0(), currentNode); 
	    }
		lv_comment_10_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContextParameterTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_10_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'PROMPT:' 
    {
        createLeafNode(grammarAccess.getContextParameterTypeAccess().getPROMPTKeyword_7_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getContextParameterTypeAccess().getPromptEStringParserRuleCall_7_1_0(), currentNode); 
	    }
		lv_prompt_12_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContextParameterTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"prompt",
	        		lv_prompt_12_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'PROMPTNEEDED:' 
    {
        createLeafNode(grammarAccess.getContextParameterTypeAccess().getPROMPTNEEDEDKeyword_8_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getContextParameterTypeAccess().getPromptNeededEBooleanParserRuleCall_8_1_0(), currentNode); 
	    }
		lv_promptNeeded_14_0=ruleEBoolean		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContextParameterTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"promptNeeded",
	        		lv_promptNeeded_14_0, 
	        		"EBoolean", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'REPOSITORYCONTEXTID:' 
    {
        createLeafNode(grammarAccess.getContextParameterTypeAccess().getREPOSITORYCONTEXTIDKeyword_9_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getContextParameterTypeAccess().getRepositoryContextIdEStringParserRuleCall_9_1_0(), currentNode); 
	    }
		lv_repositoryContextId_16_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContextParameterTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"repositoryContextId",
	        		lv_repositoryContextId_16_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?	'}' 
    {
        createLeafNode(grammarAccess.getContextParameterTypeAccess().getRightCurlyBracketKeyword_10(), null); 
    }
)
;





// Entry rule entryRuleUniqueNameType
entryRuleUniqueNameType returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getUniqueNameTypeRule(), currentNode); }
	 iv_ruleUniqueNameType=ruleUniqueNameType 
	 { $current=$iv_ruleUniqueNameType.current; } 
	 EOF 
;

// Rule UniqueNameType
ruleUniqueNameType returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUniqueNameTypeAccess().getValueEStringParserRuleCall_0(), currentNode); 
	    }
		lv_value_0_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUniqueNameTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_0_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
;





// Entry rule entryRuleConnectionType
entryRuleConnectionType returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getConnectionTypeRule(), currentNode); }
	 iv_ruleConnectionType=ruleConnectionType 
	 { $current=$iv_ruleConnectionType.current; } 
	 EOF 
;

// Rule ConnectionType
ruleConnectionType returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getConnectionTypeAccess().getConnectionTypeAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getConnectionTypeAccess().getConnectionTypeAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'addConnection' 
    {
        createLeafNode(grammarAccess.getConnectionTypeAccess().getAddConnectionKeyword_1(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getConnectionTypeAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
(	'TYPE:' 
    {
        createLeafNode(grammarAccess.getConnectionTypeAccess().getTYPEKeyword_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConnectionTypeAccess().getConnectorNameEStringParserRuleCall_3_1_0(), currentNode); 
	    }
		lv_connectorName_4_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConnectionTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"connectorName",
	        		lv_connectorName_4_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))(	',' 
    {
        createLeafNode(grammarAccess.getConnectionTypeAccess().getCommaKeyword_4_0(), null); 
    }
	'NAME:' 
    {
        createLeafNode(grammarAccess.getConnectionTypeAccess().getNAMEKeyword_4_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConnectionTypeAccess().getLabelEStringParserRuleCall_4_2_0(), currentNode); 
	    }
		lv_label_7_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConnectionTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"label",
	        		lv_label_7_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))(	',' 
    {
        createLeafNode(grammarAccess.getConnectionTypeAccess().getCommaKeyword_5_0(), null); 
    }
	'LINESTYLE:' 
    {
        createLeafNode(grammarAccess.getConnectionTypeAccess().getLINESTYLEKeyword_5_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConnectionTypeAccess().getLineStyleEIntParserRuleCall_5_2_0(), currentNode); 
	    }
		lv_lineStyle_10_0=ruleEInt		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConnectionTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"lineStyle",
	        		lv_lineStyle_10_0, 
	        		"EInt", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	',' 
    {
        createLeafNode(grammarAccess.getConnectionTypeAccess().getCommaKeyword_6_0(), null); 
    }
	'MERGEORDER:' 
    {
        createLeafNode(grammarAccess.getConnectionTypeAccess().getMERGEORDERKeyword_6_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConnectionTypeAccess().getMergeOrderEIntParserRuleCall_6_2_0(), currentNode); 
	    }
		lv_mergeOrder_13_0=ruleEInt		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConnectionTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"mergeOrder",
	        		lv_mergeOrder_13_0, 
	        		"EInt", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	',' 
    {
        createLeafNode(grammarAccess.getConnectionTypeAccess().getCommaKeyword_7_0(), null); 
    }
	'METANAME:' 
    {
        createLeafNode(grammarAccess.getConnectionTypeAccess().getMETANAMEKeyword_7_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConnectionTypeAccess().getMetanameEStringParserRuleCall_7_2_0(), currentNode); 
	    }
		lv_metaname_16_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConnectionTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"metaname",
	        		lv_metaname_16_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	',' 
    {
        createLeafNode(grammarAccess.getConnectionTypeAccess().getCommaKeyword_8_0(), null); 
    }
	'OUTPUTID:' 
    {
        createLeafNode(grammarAccess.getConnectionTypeAccess().getOUTPUTIDKeyword_8_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConnectionTypeAccess().getOutputIdEIntParserRuleCall_8_2_0(), currentNode); 
	    }
		lv_outputId_19_0=ruleEInt		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConnectionTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"outputId",
	        		lv_outputId_19_0, 
	        		"EInt", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	',' 
    {
        createLeafNode(grammarAccess.getConnectionTypeAccess().getCommaKeyword_9_0(), null); 
    }
	'SOURCE:' 
    {
        createLeafNode(grammarAccess.getConnectionTypeAccess().getSOURCEKeyword_9_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConnectionTypeAccess().getSourceEStringParserRuleCall_9_2_0(), currentNode); 
	    }
		lv_source_22_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConnectionTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"source",
	        		lv_source_22_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	',' 
    {
        createLeafNode(grammarAccess.getConnectionTypeAccess().getCommaKeyword_10_0(), null); 
    }
	'TARGET:' 
    {
        createLeafNode(grammarAccess.getConnectionTypeAccess().getTARGETKeyword_10_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConnectionTypeAccess().getTargetEStringParserRuleCall_10_2_0(), currentNode); 
	    }
		lv_target_25_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConnectionTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"target",
	        		lv_target_25_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	',' 
    {
        createLeafNode(grammarAccess.getConnectionTypeAccess().getCommaKeyword_11_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConnectionTypeAccess().getElementParameterElementParameterTypeParserRuleCall_11_1_0(), currentNode); 
	    }
		lv_elementParameter_27_0=ruleElementParameterType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConnectionTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"elementParameter",
	        		lv_elementParameter_27_0, 
	        		"ElementParameterType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?	'}' 
    {
        createLeafNode(grammarAccess.getConnectionTypeAccess().getRightCurlyBracketKeyword_12(), null); 
    }
)
;





// Entry rule entryRuleNoteType
entryRuleNoteType returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getNoteTypeRule(), currentNode); }
	 iv_ruleNoteType=ruleNoteType 
	 { $current=$iv_ruleNoteType.current; } 
	 EOF 
;

// Rule NoteType
ruleNoteType returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'addNote' 
    {
        createLeafNode(grammarAccess.getNoteTypeAccess().getAddNoteKeyword_0(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getNoteTypeAccess().getLeftCurlyBracketKeyword_1(), null); 
    }
(	'opaque' 
    {
        createLeafNode(grammarAccess.getNoteTypeAccess().getOpaqueKeyword_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNoteTypeAccess().getOpaqueEBooleanParserRuleCall_2_1_0(), currentNode); 
	    }
		lv_opaque_3_0=ruleEBoolean		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNoteTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"opaque",
	        		lv_opaque_3_0, 
	        		"EBoolean", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'POSITION' 
    {
        createLeafNode(grammarAccess.getNoteTypeAccess().getPOSITIONKeyword_3_0(), null); 
    }
	'"' 
    {
        createLeafNode(grammarAccess.getNoteTypeAccess().getQuotationMarkKeyword_3_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNoteTypeAccess().getPosXEIntParserRuleCall_3_2_0(), currentNode); 
	    }
		lv_posX_6_0=ruleEInt		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNoteTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"posX",
	        		lv_posX_6_0, 
	        		"EInt", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	',' 
    {
        createLeafNode(grammarAccess.getNoteTypeAccess().getCommaKeyword_3_3(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNoteTypeAccess().getPosYEIntParserRuleCall_3_4_0(), currentNode); 
	    }
		lv_posY_8_0=ruleEInt		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNoteTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"posY",
	        		lv_posY_8_0, 
	        		"EInt", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'"' 
    {
        createLeafNode(grammarAccess.getNoteTypeAccess().getQuotationMarkKeyword_3_5(), null); 
    }
)?(	'text' 
    {
        createLeafNode(grammarAccess.getNoteTypeAccess().getTextKeyword_4_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNoteTypeAccess().getTextEStringParserRuleCall_4_1_0(), currentNode); 
	    }
		lv_text_11_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNoteTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"text",
	        		lv_text_11_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNoteTypeAccess().getElementParameterElementParameterTypeParserRuleCall_5_0(), currentNode); 
	    }
		lv_elementParameter_12_0=ruleElementParameterType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNoteTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"elementParameter",
	        		lv_elementParameter_12_0, 
	        		"ElementParameterType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getNoteTypeAccess().getCommaKeyword_6_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNoteTypeAccess().getElementParameterElementParameterTypeParserRuleCall_6_1_0(), currentNode); 
	    }
		lv_elementParameter_14_0=ruleElementParameterType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNoteTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"elementParameter",
	        		lv_elementParameter_14_0, 
	        		"ElementParameterType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	'}' 
    {
        createLeafNode(grammarAccess.getNoteTypeAccess().getRightCurlyBracketKeyword_7(), null); 
    }
)
;





// Entry rule entryRuleElementParameterType
entryRuleElementParameterType returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getElementParameterTypeRule(), currentNode); }
	 iv_ruleElementParameterType=ruleElementParameterType 
	 { $current=$iv_ruleElementParameterType.current; } 
	 EOF 
;

// Rule ElementParameterType
ruleElementParameterType returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getElementParameterTypeAccess().getElementParameterTypeAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getElementParameterTypeAccess().getElementParameterTypeAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getElementParameterTypeAccess().getNameEStringParserRuleCall_1_0_0(), currentNode); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getElementParameterTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	':' 
    {
        createLeafNode(grammarAccess.getElementParameterTypeAccess().getColonKeyword_1_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getElementParameterTypeAccess().getValueEStringParserRuleCall_1_2_0(), currentNode); 
	    }
		lv_value_3_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getElementParameterTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_3_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)))
;





// Entry rule entryRuleSchemaElementParameterType
entryRuleSchemaElementParameterType returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSchemaElementParameterTypeRule(), currentNode); }
	 iv_ruleSchemaElementParameterType=ruleSchemaElementParameterType 
	 { $current=$iv_ruleSchemaElementParameterType.current; } 
	 EOF 
;

// Rule SchemaElementParameterType
ruleSchemaElementParameterType returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getSchemaElementParameterTypeAccess().getElementParameterTypeAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getSchemaElementParameterTypeAccess().getElementParameterTypeAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSchemaElementParameterTypeAccess().getNameEStringParserRuleCall_1_0_0(), currentNode); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSchemaElementParameterTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'{' 
    {
        createLeafNode(grammarAccess.getSchemaElementParameterTypeAccess().getLeftCurlyBracketKeyword_1_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSchemaElementParameterTypeAccess().getElementValueElementValueTypeParserRuleCall_1_2_0(), currentNode); 
	    }
		lv_elementValue_3_0=ruleElementValueType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSchemaElementParameterTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"elementValue",
	        		lv_elementValue_3_0, 
	        		"ElementValueType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getSchemaElementParameterTypeAccess().getCommaKeyword_1_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSchemaElementParameterTypeAccess().getElementValueElementValueTypeParserRuleCall_1_3_1_0(), currentNode); 
	    }
		lv_elementValue_5_0=ruleElementValueType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSchemaElementParameterTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"elementValue",
	        		lv_elementValue_5_0, 
	        		"ElementValueType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	'}' 
    {
        createLeafNode(grammarAccess.getSchemaElementParameterTypeAccess().getRightCurlyBracketKeyword_1_4(), null); 
    }
)?)
;





// Entry rule entryRuleElementValueType
entryRuleElementValueType returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getElementValueTypeRule(), currentNode); }
	 iv_ruleElementValueType=ruleElementValueType 
	 { $current=$iv_ruleElementValueType.current; } 
	 EOF 
;

// Rule ElementValueType
ruleElementValueType returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getElementValueTypeAccess().getElementValueTypeAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getElementValueTypeAccess().getElementValueTypeAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(	'NAME:' 
    {
        createLeafNode(grammarAccess.getElementValueTypeAccess().getNAMEKeyword_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getElementValueTypeAccess().getElementRefEStringParserRuleCall_1_1_0(), currentNode); 
	    }
		lv_elementRef_2_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getElementValueTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"elementRef",
	        		lv_elementRef_2_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))(	'VALUE:' 
    {
        createLeafNode(grammarAccess.getElementValueTypeAccess().getVALUEKeyword_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getElementValueTypeAccess().getValueEStringParserRuleCall_2_1_0(), currentNode); 
	    }
		lv_value_4_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getElementValueTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_4_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'TYPE:' 
    {
        createLeafNode(grammarAccess.getElementValueTypeAccess().getTYPEKeyword_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getElementValueTypeAccess().getTypeEStringParserRuleCall_3_1_0(), currentNode); 
	    }
		lv_type_6_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getElementValueTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"type",
	        		lv_type_6_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?)
;





// Entry rule entryRuleMetadataType
entryRuleMetadataType returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getMetadataTypeRule(), currentNode); }
	 iv_ruleMetadataType=ruleMetadataType 
	 { $current=$iv_ruleMetadataType.current; } 
	 EOF 
;

// Rule MetadataType
ruleMetadataType returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getMetadataTypeAccess().getMetadataTypeAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getMetadataTypeAccess().getMetadataTypeAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'addSchema' 
    {
        createLeafNode(grammarAccess.getMetadataTypeAccess().getAddSchemaKeyword_1(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getMetadataTypeAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
(	'NAME:' 
    {
        createLeafNode(grammarAccess.getMetadataTypeAccess().getNAMEKeyword_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMetadataTypeAccess().getNameEStringParserRuleCall_3_1_0(), currentNode); 
	    }
		lv_name_4_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMetadataTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_4_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'TYPE:' 
    {
        createLeafNode(grammarAccess.getMetadataTypeAccess().getTYPEKeyword_4_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMetadataTypeAccess().getConnectorEStringParserRuleCall_4_1_0(), currentNode); 
	    }
		lv_connector_6_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMetadataTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"connector",
	        		lv_connector_6_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'LABEL:' 
    {
        createLeafNode(grammarAccess.getMetadataTypeAccess().getLABELKeyword_5_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMetadataTypeAccess().getLabelEStringParserRuleCall_5_1_0(), currentNode); 
	    }
		lv_label_8_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMetadataTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"label",
	        		lv_label_8_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'COMMENT:' 
    {
        createLeafNode(grammarAccess.getMetadataTypeAccess().getCOMMENTKeyword_6_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMetadataTypeAccess().getCommentEStringParserRuleCall_6_1_0(), currentNode); 
	    }
		lv_comment_10_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMetadataTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_10_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'SOURCE:' 
    {
        createLeafNode(grammarAccess.getMetadataTypeAccess().getSOURCEKeyword_7_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMetadataTypeAccess().getSourceEStringParserRuleCall_7_1_0(), currentNode); 
	    }
		lv_source_12_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMetadataTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"source",
	        		lv_source_12_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMetadataTypeAccess().getColumnColumnTypeParserRuleCall_8_0(), currentNode); 
	    }
		lv_column_13_0=ruleColumnType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMetadataTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"column",
	        		lv_column_13_0, 
	        		"ColumnType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getMetadataTypeAccess().getRightCurlyBracketKeyword_9(), null); 
    }
)
;





// Entry rule entryRuleColumnType
entryRuleColumnType returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getColumnTypeRule(), currentNode); }
	 iv_ruleColumnType=ruleColumnType 
	 { $current=$iv_ruleColumnType.current; } 
	 EOF 
;

// Rule ColumnType
ruleColumnType returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getColumnTypeAccess().getColumnTypeAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getColumnTypeAccess().getColumnTypeAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'addColumn' 
    {
        createLeafNode(grammarAccess.getColumnTypeAccess().getAddColumnKeyword_1(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getColumnTypeAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
(	'NAME:' 
    {
        createLeafNode(grammarAccess.getColumnTypeAccess().getNAMEKeyword_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getColumnTypeAccess().getNameEStringParserRuleCall_3_1_0(), currentNode); 
	    }
		lv_name_4_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getColumnTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_4_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))(	',' 
    {
        createLeafNode(grammarAccess.getColumnTypeAccess().getCommaKeyword_4_0(), null); 
    }
	'TYPE:' 
    {
        createLeafNode(grammarAccess.getColumnTypeAccess().getTYPEKeyword_4_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getColumnTypeAccess().getTypeEStringParserRuleCall_4_2_0(), currentNode); 
	    }
		lv_type_7_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getColumnTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"type",
	        		lv_type_7_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	',' 
    {
        createLeafNode(grammarAccess.getColumnTypeAccess().getCommaKeyword_5_0(), null); 
    }
	'KEY:' 
    {
        createLeafNode(grammarAccess.getColumnTypeAccess().getKEYKeyword_5_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getColumnTypeAccess().getKeyEBooleanParserRuleCall_5_2_0(), currentNode); 
	    }
		lv_key_10_0=ruleEBoolean		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getColumnTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"key",
	        		lv_key_10_0, 
	        		"EBoolean", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	',' 
    {
        createLeafNode(grammarAccess.getColumnTypeAccess().getCommaKeyword_6_0(), null); 
    }
	'NULLABLE:' 
    {
        createLeafNode(grammarAccess.getColumnTypeAccess().getNULLABLEKeyword_6_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getColumnTypeAccess().getNullableEBooleanParserRuleCall_6_2_0(), currentNode); 
	    }
		lv_nullable_13_0=ruleEBoolean		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getColumnTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"nullable",
	        		lv_nullable_13_0, 
	        		"EBoolean", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	',' 
    {
        createLeafNode(grammarAccess.getColumnTypeAccess().getCommaKeyword_7_0(), null); 
    }
	'DEFAULTVALUE:' 
    {
        createLeafNode(grammarAccess.getColumnTypeAccess().getDEFAULTVALUEKeyword_7_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getColumnTypeAccess().getDefaultValueEStringParserRuleCall_7_2_0(), currentNode); 
	    }
		lv_defaultValue_16_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getColumnTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"defaultValue",
	        		lv_defaultValue_16_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	',' 
    {
        createLeafNode(grammarAccess.getColumnTypeAccess().getCommaKeyword_8_0(), null); 
    }
	'LENGTH:' 
    {
        createLeafNode(grammarAccess.getColumnTypeAccess().getLENGTHKeyword_8_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getColumnTypeAccess().getLengthEIntParserRuleCall_8_2_0(), currentNode); 
	    }
		lv_length_19_0=ruleEInt		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getColumnTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"length",
	        		lv_length_19_0, 
	        		"EInt", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	',' 
    {
        createLeafNode(grammarAccess.getColumnTypeAccess().getCommaKeyword_9_0(), null); 
    }
	'COMMENT:' 
    {
        createLeafNode(grammarAccess.getColumnTypeAccess().getCOMMENTKeyword_9_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getColumnTypeAccess().getCommentEStringParserRuleCall_9_2_0(), currentNode); 
	    }
		lv_comment_22_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getColumnTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_22_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	',' 
    {
        createLeafNode(grammarAccess.getColumnTypeAccess().getCommaKeyword_10_0(), null); 
    }
	'ORIGINALDBCOLUMNNAME' 
    {
        createLeafNode(grammarAccess.getColumnTypeAccess().getORIGINALDBCOLUMNNAMEKeyword_10_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getColumnTypeAccess().getOriginalDbColumnNameEStringParserRuleCall_10_2_0(), currentNode); 
	    }
		lv_originalDbColumnName_25_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getColumnTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"originalDbColumnName",
	        		lv_originalDbColumnName_25_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	',' 
    {
        createLeafNode(grammarAccess.getColumnTypeAccess().getCommaKeyword_11_0(), null); 
    }
	'PATTREN:' 
    {
        createLeafNode(grammarAccess.getColumnTypeAccess().getPATTRENKeyword_11_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getColumnTypeAccess().getPatternEStringParserRuleCall_11_2_0(), currentNode); 
	    }
		lv_pattern_28_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getColumnTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"pattern",
	        		lv_pattern_28_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	',' 
    {
        createLeafNode(grammarAccess.getColumnTypeAccess().getCommaKeyword_12_0(), null); 
    }
	'PRECISION:' 
    {
        createLeafNode(grammarAccess.getColumnTypeAccess().getPRECISIONKeyword_12_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getColumnTypeAccess().getPrecisionEIntParserRuleCall_12_2_0(), currentNode); 
	    }
		lv_precision_31_0=ruleEInt		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getColumnTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"precision",
	        		lv_precision_31_0, 
	        		"EInt", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	',' 
    {
        createLeafNode(grammarAccess.getColumnTypeAccess().getCommaKeyword_13_0(), null); 
    }
	'SOURCETYPE:' 
    {
        createLeafNode(grammarAccess.getColumnTypeAccess().getSOURCETYPEKeyword_13_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getColumnTypeAccess().getSourceTypeEStringParserRuleCall_13_2_0(), currentNode); 
	    }
		lv_sourceType_34_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getColumnTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"sourceType",
	        		lv_sourceType_34_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?	'}' 
    {
        createLeafNode(grammarAccess.getColumnTypeAccess().getRightCurlyBracketKeyword_14(), null); 
    }
)
;





// Entry rule entryRuleEString
entryRuleEString returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getEStringRule(), currentNode); } 
	 iv_ruleEString=ruleEString 
	 { $current=$iv_ruleEString.current.getText(); }  
	 EOF 
;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    createLeafNode(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0(), null); 
    }

    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    createLeafNode(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1(), null); 
    }

    |    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    createLeafNode(grammarAccess.getEStringAccess().getINTTerminalRuleCall_2(), null); 
    }
)
    ;





// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getEIntRule(), currentNode); } 
	 iv_ruleEInt=ruleEInt 
	 { $current=$iv_ruleEInt.current.getText(); }  
	 EOF 
;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
((
	kw='-' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0(), null); 
    }
)?    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    createLeafNode(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1(), null); 
    }
)
    ;





// Entry rule entryRuleEBoolean
entryRuleEBoolean returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getEBooleanRule(), currentNode); } 
	 iv_ruleEBoolean=ruleEBoolean 
	 { $current=$iv_ruleEBoolean.current.getText(); }  
	 EOF 
;

// Rule EBoolean
ruleEBoolean returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(
	kw='true' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getEBooleanAccess().getTrueKeyword_0(), null); 
    }

    |
	kw='false' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getEBooleanAccess().getFalseKeyword_1(), null); 
    }
)
    ;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


