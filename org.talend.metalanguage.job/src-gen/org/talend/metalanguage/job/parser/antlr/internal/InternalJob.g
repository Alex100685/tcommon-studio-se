/*
* generated by Xtext
*/
grammar InternalJob;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.talend.metalanguage.job.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.talend.metalanguage.job.parser.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.xtext.conversion.ValueConverterException;
import org.talend.metalanguage.job.services.JobGrammarAccess;

}

@parser::members {

 	private JobGrammarAccess grammarAccess;
 	
    public InternalJobParser(TokenStream input, IAstFactory factory, JobGrammarAccess grammarAccess) {
        this(input);
        this.factory = factory;
        registerRules(grammarAccess.getGrammar());
        this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected InputStream getTokenFile() {
    	ClassLoader classLoader = getClass().getClassLoader();
    	return classLoader.getResourceAsStream("org/talend/metalanguage/job/parser/antlr/internal/InternalJob.tokens");
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "ProcessType";	
   	}
   	
   	@Override
   	protected JobGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleProcessType
entryRuleProcessType returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getProcessTypeRule(), currentNode); }
	 iv_ruleProcessType=ruleProcessType 
	 { $current=$iv_ruleProcessType.current; } 
	 EOF 
;

// Rule ProcessType
ruleProcessType returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getProcessTypeAccess().getProcessTypeAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getProcessTypeAccess().getProcessTypeAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(	'addParameters' 
    {
        createLeafNode(grammarAccess.getProcessTypeAccess().getAddParametersKeyword_1_0(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getProcessTypeAccess().getLeftCurlyBracketKeyword_1_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getProcessTypeAccess().getParametersParametersTypeParserRuleCall_1_2_0(), currentNode); 
	    }
		lv_parameters_3_0=ruleParametersType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getProcessTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"parameters",
	        		lv_parameters_3_0, 
	        		"ParametersType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'}' 
    {
        createLeafNode(grammarAccess.getProcessTypeAccess().getRightCurlyBracketKeyword_1_3(), null); 
    }
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getProcessTypeAccess().getNodeNodeTypeParserRuleCall_2_0(), currentNode); 
	    }
		lv_node_5_0=ruleNodeType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getProcessTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"node",
	        		lv_node_5_0, 
	        		"NodeType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getProcessTypeAccess().getConnectionConnectionTypeParserRuleCall_3_0(), currentNode); 
	    }
		lv_connection_6_0=ruleConnectionType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getProcessTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"connection",
	        		lv_connection_6_0, 
	        		"ConnectionType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getProcessTypeAccess().getNoteNoteTypeParserRuleCall_4_0(), currentNode); 
	    }
		lv_note_7_0=ruleNoteType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getProcessTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"note",
	        		lv_note_7_0, 
	        		"NoteType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getProcessTypeAccess().getContextContextTypeParserRuleCall_5_0(), currentNode); 
	    }
		lv_context_8_0=ruleContextType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getProcessTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"context",
	        		lv_context_8_0, 
	        		"ContextType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*)
;





// Entry rule entryRuleParametersType
entryRuleParametersType returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getParametersTypeRule(), currentNode); }
	 iv_ruleParametersType=ruleParametersType 
	 { $current=$iv_ruleParametersType.current; } 
	 EOF 
;

// Rule ParametersType
ruleParametersType returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getParametersTypeAccess().getElementParameterElementParameterTypeParserRuleCall_0_0(), currentNode); 
	    }
		lv_elementParameter_0_0=ruleElementParameterType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getParametersTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"elementParameter",
	        		lv_elementParameter_0_0, 
	        		"ElementParameterType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getParametersTypeAccess().getCommaKeyword_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getParametersTypeAccess().getElementParameterElementParameterTypeParserRuleCall_1_1_0(), currentNode); 
	    }
		lv_elementParameter_2_0=ruleElementParameterType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getParametersTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"elementParameter",
	        		lv_elementParameter_2_0, 
	        		"ElementParameterType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)
;







// Entry rule entryRuleNodeType
entryRuleNodeType returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getNodeTypeRule(), currentNode); }
	 iv_ruleNodeType=ruleNodeType 
	 { $current=$iv_ruleNodeType.current; } 
	 EOF 
;

// Rule NodeType
ruleNodeType returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'addComponent' 
    {
        createLeafNode(grammarAccess.getNodeTypeAccess().getAddComponentKeyword_0(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getNodeTypeAccess().getLeftCurlyBracketKeyword_1(), null); 
    }
	'setComponentDefinition' 
    {
        createLeafNode(grammarAccess.getNodeTypeAccess().getSetComponentDefinitionKeyword_2(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getNodeTypeAccess().getLeftCurlyBracketKeyword_3(), null); 
    }
(	'TYPE:' 
    {
        createLeafNode(grammarAccess.getNodeTypeAccess().getTYPEKeyword_4_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNodeTypeAccess().getComponentNameEStringParserRuleCall_4_1_0(), currentNode); 
	    }
		lv_componentName_5_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNodeTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"componentName",
	        		lv_componentName_5_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	',' 
    {
        createLeafNode(grammarAccess.getNodeTypeAccess().getCommaKeyword_4_2(), null); 
    }
)(	'NAME:' 
    {
        createLeafNode(grammarAccess.getNodeTypeAccess().getNAMEKeyword_5_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNodeTypeAccess().getElementParameterUniqueNameTypeParserRuleCall_5_1_0(), currentNode); 
	    }
		lv_elementParameter_8_0=ruleUniqueNameType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNodeTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"elementParameter",
	        		lv_elementParameter_8_0, 
	        		"UniqueNameType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	',' 
    {
        createLeafNode(grammarAccess.getNodeTypeAccess().getCommaKeyword_5_2(), null); 
    }
)(	'POSITION:' 
    {
        createLeafNode(grammarAccess.getNodeTypeAccess().getPOSITIONKeyword_6_0(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNodeTypeAccess().getPosXEIntParserRuleCall_6_1_0_0(), currentNode); 
	    }
		lv_posX_11_0=ruleEInt		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNodeTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"posX",
	        		lv_posX_11_0, 
	        		"EInt", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	',' 
    {
        createLeafNode(grammarAccess.getNodeTypeAccess().getCommaKeyword_6_1_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNodeTypeAccess().getPosYEIntParserRuleCall_6_1_2_0(), currentNode); 
	    }
		lv_posY_13_0=ruleEInt		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNodeTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"posY",
	        		lv_posY_13_0, 
	        		"EInt", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)))	'}' 
    {
        createLeafNode(grammarAccess.getNodeTypeAccess().getRightCurlyBracketKeyword_7(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNodeTypeAccess().getMetadataMetadataTypeParserRuleCall_8_0(), currentNode); 
	    }
		lv_metadata_15_0=ruleMetadataType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNodeTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"metadata",
	        		lv_metadata_15_0, 
	        		"MetadataType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'setSettings' 
    {
        createLeafNode(grammarAccess.getNodeTypeAccess().getSetSettingsKeyword_9(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getNodeTypeAccess().getLeftCurlyBracketKeyword_10(), null); 
    }
(
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNodeTypeAccess().getElementParameterSchemaElementParameterTypeParserRuleCall_11_0_0(), currentNode); 
	    }
		lv_elementParameter_18_1=ruleSchemaElementParameterType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNodeTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"elementParameter",
	        		lv_elementParameter_18_1, 
	        		"SchemaElementParameterType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

    |		{ 
	        currentNode=createCompositeNode(grammarAccess.getNodeTypeAccess().getElementParameterElementParameterTypeParserRuleCall_11_0_1(), currentNode); 
	    }
		lv_elementParameter_18_2=ruleElementParameterType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNodeTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"elementParameter",
	        		lv_elementParameter_18_2, 
	        		"ElementParameterType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)

)
)(	',' 
    {
        createLeafNode(grammarAccess.getNodeTypeAccess().getCommaKeyword_12_0(), null); 
    }
(
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNodeTypeAccess().getElementParameterSchemaElementParameterTypeParserRuleCall_12_1_0_0(), currentNode); 
	    }
		lv_elementParameter_20_1=ruleSchemaElementParameterType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNodeTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"elementParameter",
	        		lv_elementParameter_20_1, 
	        		"SchemaElementParameterType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

    |		{ 
	        currentNode=createCompositeNode(grammarAccess.getNodeTypeAccess().getElementParameterElementParameterTypeParserRuleCall_12_1_0_1(), currentNode); 
	    }
		lv_elementParameter_20_2=ruleElementParameterType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNodeTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"elementParameter",
	        		lv_elementParameter_20_2, 
	        		"ElementParameterType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)

)
))*	'}' 
    {
        createLeafNode(grammarAccess.getNodeTypeAccess().getRightCurlyBracketKeyword_13(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNodeTypeAccess().getMetadataMetadataTypeParserRuleCall_14_0(), currentNode); 
	    }
		lv_metadata_22_0=ruleMetadataType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNodeTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"metadata",
	        		lv_metadata_22_0, 
	        		"MetadataType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getNodeTypeAccess().getRightCurlyBracketKeyword_15(), null); 
    }
)
;





// Entry rule entryRuleContextType
entryRuleContextType returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getContextTypeRule(), currentNode); }
	 iv_ruleContextType=ruleContextType 
	 { $current=$iv_ruleContextType.current; } 
	 EOF 
;

// Rule ContextType
ruleContextType returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getContextTypeAccess().getContextTypeAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getContextTypeAccess().getContextTypeAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'ContextType' 
    {
        createLeafNode(grammarAccess.getContextTypeAccess().getContextTypeKeyword_1(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getContextTypeAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
(	'NAME:' 
    {
        createLeafNode(grammarAccess.getContextTypeAccess().getNAMEKeyword_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getContextTypeAccess().getNameEStringParserRuleCall_3_1_0(), currentNode); 
	    }
		lv_name_4_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContextTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_4_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'CONFIRMATIONNEED:' 
    {
        createLeafNode(grammarAccess.getContextTypeAccess().getCONFIRMATIONNEEDKeyword_4_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getContextTypeAccess().getConfirmationNeededEBooleanParserRuleCall_4_1_0(), currentNode); 
	    }
		lv_confirmationNeeded_6_0=ruleEBoolean		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContextTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"confirmationNeeded",
	        		lv_confirmationNeeded_6_0, 
	        		"EBoolean", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getContextTypeAccess().getContextParameterContextParameterTypeParserRuleCall_5_0_0(), currentNode); 
	    }
		lv_contextParameter_7_0=ruleContextParameterType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContextTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contextParameter",
	        		lv_contextParameter_7_0, 
	        		"ContextParameterType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getContextTypeAccess().getCommaKeyword_5_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getContextTypeAccess().getContextParameterContextParameterTypeParserRuleCall_5_1_1_0(), currentNode); 
	    }
		lv_contextParameter_9_0=ruleContextParameterType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContextTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contextParameter",
	        		lv_contextParameter_9_0, 
	        		"ContextParameterType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)?	'}' 
    {
        createLeafNode(grammarAccess.getContextTypeAccess().getRightCurlyBracketKeyword_6(), null); 
    }
)
;





// Entry rule entryRuleContextParameterType
entryRuleContextParameterType returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getContextParameterTypeRule(), currentNode); }
	 iv_ruleContextParameterType=ruleContextParameterType 
	 { $current=$iv_ruleContextParameterType.current; } 
	 EOF 
;

// Rule ContextParameterType
ruleContextParameterType returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getContextParameterTypeAccess().getContextParameterTypeAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getContextParameterTypeAccess().getContextParameterTypeAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'addContextParameter' 
    {
        createLeafNode(grammarAccess.getContextParameterTypeAccess().getAddContextParameterKeyword_1(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getContextParameterTypeAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
(	'NAME:' 
    {
        createLeafNode(grammarAccess.getContextParameterTypeAccess().getNAMEKeyword_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getContextParameterTypeAccess().getNameEStringParserRuleCall_3_1_0(), currentNode); 
	    }
		lv_name_4_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContextParameterTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_4_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'TYPE:' 
    {
        createLeafNode(grammarAccess.getContextParameterTypeAccess().getTYPEKeyword_4_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getContextParameterTypeAccess().getTypeEStringParserRuleCall_4_1_0(), currentNode); 
	    }
		lv_type_6_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContextParameterTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"type",
	        		lv_type_6_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'VALUE:' 
    {
        createLeafNode(grammarAccess.getContextParameterTypeAccess().getVALUEKeyword_5_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getContextParameterTypeAccess().getValueEStringParserRuleCall_5_1_0(), currentNode); 
	    }
		lv_value_8_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContextParameterTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_8_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'COMMENT:' 
    {
        createLeafNode(grammarAccess.getContextParameterTypeAccess().getCOMMENTKeyword_6_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getContextParameterTypeAccess().getCommentEStringParserRuleCall_6_1_0(), currentNode); 
	    }
		lv_comment_10_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContextParameterTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_10_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'PROMPT:' 
    {
        createLeafNode(grammarAccess.getContextParameterTypeAccess().getPROMPTKeyword_7_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getContextParameterTypeAccess().getPromptEStringParserRuleCall_7_1_0(), currentNode); 
	    }
		lv_prompt_12_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContextParameterTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"prompt",
	        		lv_prompt_12_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'PROMPTNEEDED:' 
    {
        createLeafNode(grammarAccess.getContextParameterTypeAccess().getPROMPTNEEDEDKeyword_8_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getContextParameterTypeAccess().getPromptNeededEBooleanParserRuleCall_8_1_0(), currentNode); 
	    }
		lv_promptNeeded_14_0=ruleEBoolean		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContextParameterTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"promptNeeded",
	        		lv_promptNeeded_14_0, 
	        		"EBoolean", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'REPOSITORYCONTEXTID:' 
    {
        createLeafNode(grammarAccess.getContextParameterTypeAccess().getREPOSITORYCONTEXTIDKeyword_9_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getContextParameterTypeAccess().getRepositoryContextIdEStringParserRuleCall_9_1_0(), currentNode); 
	    }
		lv_repositoryContextId_16_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContextParameterTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"repositoryContextId",
	        		lv_repositoryContextId_16_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?	'}' 
    {
        createLeafNode(grammarAccess.getContextParameterTypeAccess().getRightCurlyBracketKeyword_10(), null); 
    }
)
;





// Entry rule entryRuleUniqueNameType
entryRuleUniqueNameType returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getUniqueNameTypeRule(), currentNode); }
	 iv_ruleUniqueNameType=ruleUniqueNameType 
	 { $current=$iv_ruleUniqueNameType.current; } 
	 EOF 
;

// Rule UniqueNameType
ruleUniqueNameType returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUniqueNameTypeAccess().getValueEStringParserRuleCall_0(), currentNode); 
	    }
		lv_value_0_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUniqueNameTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_0_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
;





// Entry rule entryRuleConnectionType
entryRuleConnectionType returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getConnectionTypeRule(), currentNode); }
	 iv_ruleConnectionType=ruleConnectionType 
	 { $current=$iv_ruleConnectionType.current; } 
	 EOF 
;

// Rule ConnectionType
ruleConnectionType returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getConnectionTypeAccess().getConnectionTypeAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getConnectionTypeAccess().getConnectionTypeAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'addConnection' 
    {
        createLeafNode(grammarAccess.getConnectionTypeAccess().getAddConnectionKeyword_1(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getConnectionTypeAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
(	'TYPE:' 
    {
        createLeafNode(grammarAccess.getConnectionTypeAccess().getTYPEKeyword_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConnectionTypeAccess().getConnectorNameEStringParserRuleCall_3_1_0(), currentNode); 
	    }
		lv_connectorName_4_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConnectionTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"connectorName",
	        		lv_connectorName_4_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))(	',' 
    {
        createLeafNode(grammarAccess.getConnectionTypeAccess().getCommaKeyword_4_0(), null); 
    }
	'NAME:' 
    {
        createLeafNode(grammarAccess.getConnectionTypeAccess().getNAMEKeyword_4_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConnectionTypeAccess().getLabelEStringParserRuleCall_4_2_0(), currentNode); 
	    }
		lv_label_7_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConnectionTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"label",
	        		lv_label_7_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))(	',' 
    {
        createLeafNode(grammarAccess.getConnectionTypeAccess().getCommaKeyword_5_0(), null); 
    }
	'LINESTYLE:' 
    {
        createLeafNode(grammarAccess.getConnectionTypeAccess().getLINESTYLEKeyword_5_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConnectionTypeAccess().getLineStyleEIntParserRuleCall_5_2_0(), currentNode); 
	    }
		lv_lineStyle_10_0=ruleEInt		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConnectionTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"lineStyle",
	        		lv_lineStyle_10_0, 
	        		"EInt", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	',' 
    {
        createLeafNode(grammarAccess.getConnectionTypeAccess().getCommaKeyword_6_0(), null); 
    }
	'MERGEORDER:' 
    {
        createLeafNode(grammarAccess.getConnectionTypeAccess().getMERGEORDERKeyword_6_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConnectionTypeAccess().getMergeOrderEIntParserRuleCall_6_2_0(), currentNode); 
	    }
		lv_mergeOrder_13_0=ruleEInt		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConnectionTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"mergeOrder",
	        		lv_mergeOrder_13_0, 
	        		"EInt", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	',' 
    {
        createLeafNode(grammarAccess.getConnectionTypeAccess().getCommaKeyword_7_0(), null); 
    }
	'METANAME:' 
    {
        createLeafNode(grammarAccess.getConnectionTypeAccess().getMETANAMEKeyword_7_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConnectionTypeAccess().getMetanameEStringParserRuleCall_7_2_0(), currentNode); 
	    }
		lv_metaname_16_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConnectionTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"metaname",
	        		lv_metaname_16_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	',' 
    {
        createLeafNode(grammarAccess.getConnectionTypeAccess().getCommaKeyword_8_0(), null); 
    }
	'OUTPUTID:' 
    {
        createLeafNode(grammarAccess.getConnectionTypeAccess().getOUTPUTIDKeyword_8_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConnectionTypeAccess().getOutputIdEIntParserRuleCall_8_2_0(), currentNode); 
	    }
		lv_outputId_19_0=ruleEInt		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConnectionTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"outputId",
	        		lv_outputId_19_0, 
	        		"EInt", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	',' 
    {
        createLeafNode(grammarAccess.getConnectionTypeAccess().getCommaKeyword_9_0(), null); 
    }
	'SOURCE:' 
    {
        createLeafNode(grammarAccess.getConnectionTypeAccess().getSOURCEKeyword_9_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConnectionTypeAccess().getSourceEStringParserRuleCall_9_2_0(), currentNode); 
	    }
		lv_source_22_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConnectionTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"source",
	        		lv_source_22_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	',' 
    {
        createLeafNode(grammarAccess.getConnectionTypeAccess().getCommaKeyword_10_0(), null); 
    }
	'TARGET:' 
    {
        createLeafNode(grammarAccess.getConnectionTypeAccess().getTARGETKeyword_10_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConnectionTypeAccess().getTargetEStringParserRuleCall_10_2_0(), currentNode); 
	    }
		lv_target_25_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConnectionTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"target",
	        		lv_target_25_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	',' 
    {
        createLeafNode(grammarAccess.getConnectionTypeAccess().getCommaKeyword_11_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getConnectionTypeAccess().getElementParameterElementParameterTypeParserRuleCall_11_1_0(), currentNode); 
	    }
		lv_elementParameter_27_0=ruleElementParameterType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getConnectionTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"elementParameter",
	        		lv_elementParameter_27_0, 
	        		"ElementParameterType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?	'}' 
    {
        createLeafNode(grammarAccess.getConnectionTypeAccess().getRightCurlyBracketKeyword_12(), null); 
    }
)
;





// Entry rule entryRuleNoteType
entryRuleNoteType returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getNoteTypeRule(), currentNode); }
	 iv_ruleNoteType=ruleNoteType 
	 { $current=$iv_ruleNoteType.current; } 
	 EOF 
;

// Rule NoteType
ruleNoteType returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'addNote' 
    {
        createLeafNode(grammarAccess.getNoteTypeAccess().getAddNoteKeyword_0(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getNoteTypeAccess().getLeftCurlyBracketKeyword_1(), null); 
    }
(	'opaque' 
    {
        createLeafNode(grammarAccess.getNoteTypeAccess().getOpaqueKeyword_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNoteTypeAccess().getOpaqueEBooleanParserRuleCall_2_1_0(), currentNode); 
	    }
		lv_opaque_3_0=ruleEBoolean		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNoteTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"opaque",
	        		lv_opaque_3_0, 
	        		"EBoolean", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'POSITION' 
    {
        createLeafNode(grammarAccess.getNoteTypeAccess().getPOSITIONKeyword_3_0(), null); 
    }
	'"' 
    {
        createLeafNode(grammarAccess.getNoteTypeAccess().getQuotationMarkKeyword_3_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNoteTypeAccess().getPosXEIntParserRuleCall_3_2_0(), currentNode); 
	    }
		lv_posX_6_0=ruleEInt		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNoteTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"posX",
	        		lv_posX_6_0, 
	        		"EInt", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	',' 
    {
        createLeafNode(grammarAccess.getNoteTypeAccess().getCommaKeyword_3_3(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNoteTypeAccess().getPosYEIntParserRuleCall_3_4_0(), currentNode); 
	    }
		lv_posY_8_0=ruleEInt		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNoteTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"posY",
	        		lv_posY_8_0, 
	        		"EInt", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'"' 
    {
        createLeafNode(grammarAccess.getNoteTypeAccess().getQuotationMarkKeyword_3_5(), null); 
    }
)?(	'text' 
    {
        createLeafNode(grammarAccess.getNoteTypeAccess().getTextKeyword_4_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNoteTypeAccess().getTextEStringParserRuleCall_4_1_0(), currentNode); 
	    }
		lv_text_11_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNoteTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"text",
	        		lv_text_11_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNoteTypeAccess().getElementParameterElementParameterTypeParserRuleCall_5_0(), currentNode); 
	    }
		lv_elementParameter_12_0=ruleElementParameterType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNoteTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"elementParameter",
	        		lv_elementParameter_12_0, 
	        		"ElementParameterType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getNoteTypeAccess().getCommaKeyword_6_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNoteTypeAccess().getElementParameterElementParameterTypeParserRuleCall_6_1_0(), currentNode); 
	    }
		lv_elementParameter_14_0=ruleElementParameterType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNoteTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"elementParameter",
	        		lv_elementParameter_14_0, 
	        		"ElementParameterType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	'}' 
    {
        createLeafNode(grammarAccess.getNoteTypeAccess().getRightCurlyBracketKeyword_7(), null); 
    }
)
;





// Entry rule entryRuleElementParameterType
entryRuleElementParameterType returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getElementParameterTypeRule(), currentNode); }
	 iv_ruleElementParameterType=ruleElementParameterType 
	 { $current=$iv_ruleElementParameterType.current; } 
	 EOF 
;

// Rule ElementParameterType
ruleElementParameterType returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getElementParameterTypeAccess().getElementParameterTypeAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getElementParameterTypeAccess().getElementParameterTypeAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getElementParameterTypeAccess().getNameEStringParserRuleCall_1_0_0(), currentNode); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getElementParameterTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	':' 
    {
        createLeafNode(grammarAccess.getElementParameterTypeAccess().getColonKeyword_1_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getElementParameterTypeAccess().getValueEStringParserRuleCall_1_2_0(), currentNode); 
	    }
		lv_value_3_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getElementParameterTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_3_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)))
;





// Entry rule entryRuleSchemaElementParameterType
entryRuleSchemaElementParameterType returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSchemaElementParameterTypeRule(), currentNode); }
	 iv_ruleSchemaElementParameterType=ruleSchemaElementParameterType 
	 { $current=$iv_ruleSchemaElementParameterType.current; } 
	 EOF 
;

// Rule SchemaElementParameterType
ruleSchemaElementParameterType returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getSchemaElementParameterTypeAccess().getElementParameterTypeAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getSchemaElementParameterTypeAccess().getElementParameterTypeAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSchemaElementParameterTypeAccess().getNameEStringParserRuleCall_1_0_0(), currentNode); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSchemaElementParameterTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'{' 
    {
        createLeafNode(grammarAccess.getSchemaElementParameterTypeAccess().getLeftCurlyBracketKeyword_1_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSchemaElementParameterTypeAccess().getElementValueElementValueTypeParserRuleCall_1_2_0(), currentNode); 
	    }
		lv_elementValue_3_0=ruleElementValueType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSchemaElementParameterTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"elementValue",
	        		lv_elementValue_3_0, 
	        		"ElementValueType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getSchemaElementParameterTypeAccess().getCommaKeyword_1_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSchemaElementParameterTypeAccess().getElementValueElementValueTypeParserRuleCall_1_3_1_0(), currentNode); 
	    }
		lv_elementValue_5_0=ruleElementValueType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSchemaElementParameterTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"elementValue",
	        		lv_elementValue_5_0, 
	        		"ElementValueType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	'}' 
    {
        createLeafNode(grammarAccess.getSchemaElementParameterTypeAccess().getRightCurlyBracketKeyword_1_4(), null); 
    }
)?)
;





// Entry rule entryRuleElementValueType
entryRuleElementValueType returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getElementValueTypeRule(), currentNode); }
	 iv_ruleElementValueType=ruleElementValueType 
	 { $current=$iv_ruleElementValueType.current; } 
	 EOF 
;

// Rule ElementValueType
ruleElementValueType returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getElementValueTypeAccess().getElementValueTypeAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getElementValueTypeAccess().getElementValueTypeAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(	'NAME:' 
    {
        createLeafNode(grammarAccess.getElementValueTypeAccess().getNAMEKeyword_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getElementValueTypeAccess().getElementRefEStringParserRuleCall_1_1_0(), currentNode); 
	    }
		lv_elementRef_2_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getElementValueTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"elementRef",
	        		lv_elementRef_2_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))(	'VALUE:' 
    {
        createLeafNode(grammarAccess.getElementValueTypeAccess().getVALUEKeyword_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getElementValueTypeAccess().getValueEStringParserRuleCall_2_1_0(), currentNode); 
	    }
		lv_value_4_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getElementValueTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_4_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'TYPE:' 
    {
        createLeafNode(grammarAccess.getElementValueTypeAccess().getTYPEKeyword_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getElementValueTypeAccess().getTypeEStringParserRuleCall_3_1_0(), currentNode); 
	    }
		lv_type_6_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getElementValueTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"type",
	        		lv_type_6_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?)
;





// Entry rule entryRuleMetadataType
entryRuleMetadataType returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getMetadataTypeRule(), currentNode); }
	 iv_ruleMetadataType=ruleMetadataType 
	 { $current=$iv_ruleMetadataType.current; } 
	 EOF 
;

// Rule MetadataType
ruleMetadataType returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getMetadataTypeAccess().getMetadataTypeAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getMetadataTypeAccess().getMetadataTypeAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'addSchema' 
    {
        createLeafNode(grammarAccess.getMetadataTypeAccess().getAddSchemaKeyword_1(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getMetadataTypeAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
(	'NAME:' 
    {
        createLeafNode(grammarAccess.getMetadataTypeAccess().getNAMEKeyword_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMetadataTypeAccess().getNameEStringParserRuleCall_3_1_0(), currentNode); 
	    }
		lv_name_4_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMetadataTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_4_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'TYPE:' 
    {
        createLeafNode(grammarAccess.getMetadataTypeAccess().getTYPEKeyword_4_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMetadataTypeAccess().getConnectorEStringParserRuleCall_4_1_0(), currentNode); 
	    }
		lv_connector_6_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMetadataTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"connector",
	        		lv_connector_6_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'LABEL' 
    {
        createLeafNode(grammarAccess.getMetadataTypeAccess().getLABELKeyword_5_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMetadataTypeAccess().getLabelEStringParserRuleCall_5_1_0(), currentNode); 
	    }
		lv_label_8_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMetadataTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"label",
	        		lv_label_8_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'COMMENT:' 
    {
        createLeafNode(grammarAccess.getMetadataTypeAccess().getCOMMENTKeyword_6_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMetadataTypeAccess().getCommentEStringParserRuleCall_6_1_0(), currentNode); 
	    }
		lv_comment_10_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMetadataTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_10_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	'SOURCE:' 
    {
        createLeafNode(grammarAccess.getMetadataTypeAccess().getSOURCEKeyword_7_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMetadataTypeAccess().getSourceEStringParserRuleCall_7_1_0(), currentNode); 
	    }
		lv_source_12_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMetadataTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"source",
	        		lv_source_12_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMetadataTypeAccess().getColumnColumnTypeParserRuleCall_8_0(), currentNode); 
	    }
		lv_column_13_0=ruleColumnType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMetadataTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"column",
	        		lv_column_13_0, 
	        		"ColumnType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getMetadataTypeAccess().getRightCurlyBracketKeyword_9(), null); 
    }
)
;





// Entry rule entryRuleColumnType
entryRuleColumnType returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getColumnTypeRule(), currentNode); }
	 iv_ruleColumnType=ruleColumnType 
	 { $current=$iv_ruleColumnType.current; } 
	 EOF 
;

// Rule ColumnType
ruleColumnType returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getColumnTypeAccess().getColumnTypeAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getColumnTypeAccess().getColumnTypeAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'addColumn' 
    {
        createLeafNode(grammarAccess.getColumnTypeAccess().getAddColumnKeyword_1(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getColumnTypeAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
(	'NAME:' 
    {
        createLeafNode(grammarAccess.getColumnTypeAccess().getNAMEKeyword_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getColumnTypeAccess().getNameEStringParserRuleCall_3_1_0(), currentNode); 
	    }
		lv_name_4_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getColumnTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_4_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))(	',' 
    {
        createLeafNode(grammarAccess.getColumnTypeAccess().getCommaKeyword_4_0(), null); 
    }
	'TYPE:' 
    {
        createLeafNode(grammarAccess.getColumnTypeAccess().getTYPEKeyword_4_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getColumnTypeAccess().getTypeEStringParserRuleCall_4_2_0(), currentNode); 
	    }
		lv_type_7_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getColumnTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"type",
	        		lv_type_7_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	',' 
    {
        createLeafNode(grammarAccess.getColumnTypeAccess().getCommaKeyword_5_0(), null); 
    }
	'KEY:' 
    {
        createLeafNode(grammarAccess.getColumnTypeAccess().getKEYKeyword_5_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getColumnTypeAccess().getKeyEBooleanParserRuleCall_5_2_0(), currentNode); 
	    }
		lv_key_10_0=ruleEBoolean		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getColumnTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"key",
	        		lv_key_10_0, 
	        		"EBoolean", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	',' 
    {
        createLeafNode(grammarAccess.getColumnTypeAccess().getCommaKeyword_6_0(), null); 
    }
	'NULLABLE:' 
    {
        createLeafNode(grammarAccess.getColumnTypeAccess().getNULLABLEKeyword_6_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getColumnTypeAccess().getNullableEBooleanParserRuleCall_6_2_0(), currentNode); 
	    }
		lv_nullable_13_0=ruleEBoolean		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getColumnTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"nullable",
	        		lv_nullable_13_0, 
	        		"EBoolean", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	',' 
    {
        createLeafNode(grammarAccess.getColumnTypeAccess().getCommaKeyword_7_0(), null); 
    }
	'DEFAULTVALUE:' 
    {
        createLeafNode(grammarAccess.getColumnTypeAccess().getDEFAULTVALUEKeyword_7_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getColumnTypeAccess().getDefaultValueEStringParserRuleCall_7_2_0(), currentNode); 
	    }
		lv_defaultValue_16_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getColumnTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"defaultValue",
	        		lv_defaultValue_16_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	',' 
    {
        createLeafNode(grammarAccess.getColumnTypeAccess().getCommaKeyword_8_0(), null); 
    }
	'LENGTH:' 
    {
        createLeafNode(grammarAccess.getColumnTypeAccess().getLENGTHKeyword_8_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getColumnTypeAccess().getLengthEIntParserRuleCall_8_2_0(), currentNode); 
	    }
		lv_length_19_0=ruleEInt		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getColumnTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"length",
	        		lv_length_19_0, 
	        		"EInt", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	',' 
    {
        createLeafNode(grammarAccess.getColumnTypeAccess().getCommaKeyword_9_0(), null); 
    }
	'COMMENT:' 
    {
        createLeafNode(grammarAccess.getColumnTypeAccess().getCOMMENTKeyword_9_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getColumnTypeAccess().getCommentEStringParserRuleCall_9_2_0(), currentNode); 
	    }
		lv_comment_22_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getColumnTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"comment",
	        		lv_comment_22_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	',' 
    {
        createLeafNode(grammarAccess.getColumnTypeAccess().getCommaKeyword_10_0(), null); 
    }
	'originalDbColumnName' 
    {
        createLeafNode(grammarAccess.getColumnTypeAccess().getOriginalDbColumnNameKeyword_10_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getColumnTypeAccess().getOriginalDbColumnNameEStringParserRuleCall_10_2_0(), currentNode); 
	    }
		lv_originalDbColumnName_25_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getColumnTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"originalDbColumnName",
	        		lv_originalDbColumnName_25_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	',' 
    {
        createLeafNode(grammarAccess.getColumnTypeAccess().getCommaKeyword_11_0(), null); 
    }
	'PATTREN:' 
    {
        createLeafNode(grammarAccess.getColumnTypeAccess().getPATTRENKeyword_11_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getColumnTypeAccess().getPatternEStringParserRuleCall_11_2_0(), currentNode); 
	    }
		lv_pattern_28_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getColumnTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"pattern",
	        		lv_pattern_28_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	',' 
    {
        createLeafNode(grammarAccess.getColumnTypeAccess().getCommaKeyword_12_0(), null); 
    }
	'PRECISION:' 
    {
        createLeafNode(grammarAccess.getColumnTypeAccess().getPRECISIONKeyword_12_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getColumnTypeAccess().getPrecisionEIntParserRuleCall_12_2_0(), currentNode); 
	    }
		lv_precision_31_0=ruleEInt		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getColumnTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"precision",
	        		lv_precision_31_0, 
	        		"EInt", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?(	',' 
    {
        createLeafNode(grammarAccess.getColumnTypeAccess().getCommaKeyword_13_0(), null); 
    }
	'SOURCETYPE:' 
    {
        createLeafNode(grammarAccess.getColumnTypeAccess().getSOURCETYPEKeyword_13_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getColumnTypeAccess().getSourceTypeEStringParserRuleCall_13_2_0(), currentNode); 
	    }
		lv_sourceType_34_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getColumnTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"sourceType",
	        		lv_sourceType_34_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))?	'}' 
    {
        createLeafNode(grammarAccess.getColumnTypeAccess().getRightCurlyBracketKeyword_14(), null); 
    }
)
;





// Entry rule entryRuleEString
entryRuleEString returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getEStringRule(), currentNode); } 
	 iv_ruleEString=ruleEString 
	 { $current=$iv_ruleEString.current.getText(); }  
	 EOF 
;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    createLeafNode(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0(), null); 
    }

    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    createLeafNode(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1(), null); 
    }
)
    ;





// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getEIntRule(), currentNode); } 
	 iv_ruleEInt=ruleEInt 
	 { $current=$iv_ruleEInt.current.getText(); }  
	 EOF 
;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
((
	kw='-' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0(), null); 
    }
)?    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    createLeafNode(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1(), null); 
    }
)
    ;





// Entry rule entryRuleEBoolean
entryRuleEBoolean returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getEBooleanRule(), currentNode); } 
	 iv_ruleEBoolean=ruleEBoolean 
	 { $current=$iv_ruleEBoolean.current.getText(); }  
	 EOF 
;

// Rule EBoolean
ruleEBoolean returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(
	kw='true' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getEBooleanAccess().getTrueKeyword_0(), null); 
    }

    |
	kw='false' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getEBooleanAccess().getFalseKeyword_1(), null); 
    }
)
    ;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


