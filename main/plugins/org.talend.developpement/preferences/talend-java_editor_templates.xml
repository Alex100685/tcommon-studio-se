<?xml version="1.0" encoding="UTF-8" standalone="no"?><templates><template autoinsert="true" context="java" deleted="false" description="iterate over list with index" enabled="true" name="for_index_generic">int ${list}ListSize = ${list}.size();&#13;
for (int ${index} = 0; ${index} &lt; ${list}ListSize; ${index}++) {&#13;
	${element_type} ${cursor}${element} = ${list}.get(${index});&#13;
	&#13;
}&#13;
</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="listeners">    List&lt;${listener_type}&gt; ${listeners_list_name} = new ArrayList&lt;${listener_type}&gt;();&#13;
    &#13;
    public void addListener(${listener_type} listener) {&#13;
        ${listeners_list_name}.add(listener);&#13;
    }&#13;
&#13;
    public void removeListener(${listener_type} listener) {&#13;
        ${listeners_list_name}.remove(listener);&#13;
    }&#13;
&#13;
    protected void fireEvent(${event_type} event) {&#13;
        int listenersListSize = ${listeners_list_name}.size();&#13;
        for (int i = 0; i &lt; listenersListSize; i++) {&#13;
            ${listener_type} listener = ${listeners_list_name}.get(i);&#13;
            listener.${method_event}(event);&#13;
        }&#13;
    }&#13;
&#13;
</template><template autoinsert="false" context="java" deleted="false" description="" enabled="true" name="prepareForTest">import org.junit.runner.RunWith;
import org.powermock.core.classloader.annotations.PrepareForTest;
import org.powermock.modules.junit4.PowerMockRunner;

@RunWith(PowerMockRunner.class)
@PrepareForTest({ ${argType}.class })</template><template autoinsert="false" context="java" deleted="false" description="" enabled="true" name="singleton">private static ${enclosing_type} instance;&#13;
&#13;
public static synchronized ${enclosing_type} getInstance() {&#13;
	if(instance == null) {&#13;
		instance = new ${enclosing_type}();&#13;
	}&#13;
	return instance;&#13;
}&#13;
&#13;
private ${enclosing_type}() {&#13;
   super();&#13;
}&#13;
</template><template autoinsert="false" context="java" deleted="false" description="this.field = field;" enabled="true" name="th">this.${field} = ${field};</template><template autoinsert="false" context="java" deleted="false" description="this.field = object.field;" enabled="true" name="thth">this.${field} = ${object}.${field};</template><template autoinsert="false" context="java" deleted="false" description="" enabled="true" name="mock">${classToMock} mock${classToMock} = mock(${classToMock}.class);
when(mock${classToMock}.${methodToStub}()).thenReturn(${returnValue});
</template><template autoinsert="false" context="java" deleted="false" description="" enabled="true" name="spy">${type} spy${instance} = spy(${instance}.class);
when(spy${instance}.${methodToStub}()).thenReturn(${returnValue});
</template></templates>