<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.talend.core.repository" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appinfo>
         <meta.schema plugin="org.talend.core.repository" id="repository_node" name="repository node"/>
      </appinfo>
      <documentation>
         [Enter description of this extension point.]
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appinfo>
            <meta.element />
         </appinfo>
      </annotation>
      <complexType>
         <sequence minOccurs="0" maxOccurs="unbounded">
            <element ref="repositoryNode" minOccurs="1" maxOccurs="unbounded"/>
            <element ref="extraProducts" minOccurs="0" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="repositoryNode">
      <complexType>
         <attribute name="class" type="string">
            <annotation>
               <documentation>
                  Extend a repository node using this extension point
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn=":org.talend.core.repository.IExtendRepositoryNode" deprecated="true"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="parentNodeType" type="string">
            <annotation>
               <documentation>
                  specific the node&apos;s parent of type name.

eg: if u want this node appear in the follow of node metadata,
just set the value METADATA
               </documentation>
            </annotation>
         </attribute>
         <attribute name="key" type="string">
            <annotation>
               <documentation>
                  if empty, it&apos;s same as type.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="label" type="string" use="required">
            <annotation>
               <documentation>
                  The label is unique,u can provide the label from one properties file or such.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="alias" type="string">
            <annotation>
               <documentation>
                  It is the alias of this type.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="type" type="string" use="required">
            <annotation>
               <documentation>
                  can be same as label,but this one shouldn&apos;t be internationaled via this is the key to specific the type of this node.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="folder" type="string">
            <annotation>
               <documentation>
                  folder is used to specific a genrate folder for this node type
               </documentation>
            </annotation>
         </attribute>
         <attribute name="products" type="string" use="required">
            <annotation>
               <documentation>
                  DI DQ MDM OTHER

if want to have multi at the same time 

just use the character | to spit them,
like this: DI|DQ ....
               </documentation>
            </annotation>
         </attribute>
         <attribute name="isResouce" type="boolean">
            <annotation>
               <documentation>
                  this attribute is used with folder for each resource folder.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="ordinal" type="string">
            <annotation>
               <documentation>
                  @Deprecated, won&apos;t use.
must be int. and &gt;=0
               </documentation>
               <appinfo>
                  <meta.attribute deprecated="true"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="icon" type="string">
            <annotation>
               <documentation>
                  the path of icon
               </documentation>
               <appinfo>
                  <meta.attribute kind="resource"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="nodeType" type="string">
            <annotation>
               <documentation>
                  the type of repository node, when create the root repository node.
SYSTEM_FOLDER, by default.
can use the SYSTEM_FOLDER and STABLE_SYSTEM_FOLDER for enum IRepositoryNode.ENodeType.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="user_right" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name_pattern" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="isAllowMultiName" type="boolean">
            <annotation>
               <documentation>
                  Default is false.
This attribute is used to indicate the multiple same name is allowed when creating a resource or item, in generic, the same name resources or items should be in different folder.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="extraProducts">
      <complexType>
         <attribute name="type" type="string" use="required">
            <annotation>
               <documentation>
                  type of node which defined in &quot;repositoryNode&quot;.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="products" type="string" use="required">
            <annotation>
               <documentation>
                  same as the products in &quot;repositoryNode&quot;
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appinfo>
         <meta.section type="since"/>
      </appinfo>
      <documentation>
         [Enter the first release in which this extension point appears.]
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="examples"/>
      </appinfo>
      <documentation>
         [Enter extension point usage example here.]
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="apiinfo"/>
      </appinfo>
      <documentation>
         [Enter API information here.]
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="implementation"/>
      </appinfo>
      <documentation>
         [Enter information about supplied implementation of this extension point.]
      </documentation>
   </annotation>


</schema>
