<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.talend.repository.items.importexport" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appinfo>
         <meta.schema plugin="org.talend.repository.items.importexport" id="handler" name="Import Export Handler"/>
      </appinfo>
      <documentation>
         [Enter description of this extension point.]
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appinfo>
            <meta.element />
         </appinfo>
      </annotation>
      <complexType>
         <sequence minOccurs="0" maxOccurs="unbounded">
            <element ref="importProvider" minOccurs="0" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="importProvider">
      <annotation>
         <documentation>
            If don&apos;t set the basePath parameters, can set the data after class attribute.
For example, XxxxImportHandler:TEST
         </documentation>
      </annotation>
      <complexType>
         <choice>
            <element ref="handler"/>
         </choice>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  Unique import provider id.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="description" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="priority">
            <annotation>
               <documentation>
                  Use to override the handler.
Could be used in case both handlers return true in the &quot;valid&quot; method.
               </documentation>
               <appinfo>
                  <meta.attribute kind="identifier"/>
               </appinfo>
            </annotation>
            <simpleType>
               <restriction base="string">
                  <enumeration value="HIGHEST">
                  </enumeration>
                  <enumeration value="HIGH">
                  </enumeration>
                  <enumeration value="NORMAL">
                  </enumeration>
                  <enumeration value="LOW">
                  </enumeration>
                  <enumeration value="LOWEST">
                  </enumeration>
               </restriction>
            </simpleType>
         </attribute>
      </complexType>
   </element>

   <element name="handler">
      <annotation>
         <documentation>
            The class attribute must implement the interface IImportHandler and the parameter children will be a java.util.Map &quot;data&quot;  arguments for method setInitializationData.
         </documentation>
      </annotation>
      <complexType>
         <sequence minOccurs="0" maxOccurs="unbounded">
            <element ref="parameter" minOccurs="0" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  must implement the interface IImportHandler
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn=":org.talend.repository.items.importexport.handlers.imports.IImportHandler"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="parameter">
      <annotation>
         <documentation>
            should be a map for handler
         </documentation>
      </annotation>
      <complexType>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  The name must be unique, because this is key of java.util.Map for the handler.
                                      
- if the name is &quot;path&quot;, the value should be a relative path for resources. for example, XML File metadata is &quot;metadata/fileXml&quot;. @see ImportBasicHandler
                                      
- if the name is &quot;type&quot;, the value should be the &quot;Type&quot; of extension &quot;org.talend.core.repository.repository_node_provider&quot; or &quot;ERepositoryObjectType&quot;. @see ImportRepTypeHandler
                                      
- if the name is others, need do it by yourself  in the method setInitializationData of handler.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="value" type="string">
            <annotation>
               <documentation>
                  the value can be multi, and split by comma &quot;,&quot;.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="comment" type="string">
            <annotation>
               <documentation>
                  juse for some comments
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appinfo>
         <meta.section type="since"/>
      </appinfo>
      <documentation>
         [Enter the first release in which this extension point appears.]
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="examples"/>
      </appinfo>
      <documentation>
         [Enter extension point usage example here.]
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="apiinfo"/>
      </appinfo>
      <documentation>
         [Enter API information here.]
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="implementation"/>
      </appinfo>
      <documentation>
         [Enter information about supplied implementation of this extension point.]
      </documentation>
   </annotation>


</schema>
