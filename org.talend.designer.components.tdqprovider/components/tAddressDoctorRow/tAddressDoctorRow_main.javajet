<%@ jet
imports="
    org.talend.core.model.process.INode
    org.talend.core.model.process.ElementParameterParser
    org.talend.core.model.metadata.IMetadataTable 
    org.talend.designer.codegen.config.CodeGeneratorArgument
    java.util.List
    java.util.Map
    java.util.ArrayList
    org.talend.commons.utils.StringUtils
    org.talend.core.model.process.IConnection
    org.talend.core.model.metadata.IMetadataColumn
    org.talend.core.model.process.IConnectionCategory
"
%>
<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	List<IMetadataTable> metadatas = node.getMetadataList();
	if ((metadatas!=null)&&(metadatas.size()>0)) {
		IMetadataTable metadata = metadatas.get(0);
		if (metadata!=null) {
			String cid = node.getUniqueName();
			List< ? extends IConnection> conns = node.getIncomingConnections();
			if(conns!=null){
				if (conns.size()>0){
					IConnection conn =conns.get(0);
					
					String colName = ElementParameterParser.getValue(node, "__ADDRESS_COLUMN__");
%>
	
	// Call AddressDoctor Web Service Client
	com.AddressDoctor.validator2.addInteractive.Interactive.Result[] results_<%=cid %> = com.talend.addressdoctor.AddressDoctorClient.formatAndValidate(
		new Long(<%=ElementParameterParser.getValue(node, "__USER_ID__") %>),
		<%=ElementParameterParser.getValue(node, "__PASSWORD__") %>,
		<%=conn.getName() %>.<%=colName%>,
		com.AddressDoctor.validator2.addInteractive.Interactive.CountryOfOriginType.COO_<%=ElementParameterParser.getValue(node, "__ORIGIN_COUNTRY__") %>,
		com.AddressDoctor.validator2.addInteractive.Interactive.CountryType.<%=ElementParameterParser.getValue(node, "__COUNTRY-TYPE__") %>,
		com.AddressDoctor.validator2.addInteractive.Interactive.LineSeparatorType.LST_<%=ElementParameterParser.getValue(node, "__LINE_SEPARATOR__") %>,
		com.AddressDoctor.validator2.addInteractive.Interactive.CapitalizationType.<%=ElementParameterParser.getValue(node, "__CAPITALIZE__") %>
	);
	for (int i_<%=cid %>=0;i_<%=cid %><results_<%=cid %>.length;i_<%=cid %>++) {
		com.AddressDoctor.validator2.addInteractive.Interactive.Result result_<%=cid %> = results_<%=cid %>[i_<%=cid %>];
<%
					List< ? extends IConnection> connsout = node.getOutgoingConnections(); 
	                if (connsout!=null) {
    	            	List<IMetadataColumn> columnsout = metadata.getListColumns();
            	        for (int i=0;i<connsout.size();i++) {
            	        	IConnection connout = connsout.get(i);
                    	    if(connout.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {
	                            int columnSize=columnsout.size()-14;
    	                        for (int j = 0; j < columnSize; j++) {
        	                        IMetadataColumn columnout=columnsout.get(j);
%>
                                <%=connout.getName() %>.<%=columnout.getLabel() %>=<%=conn.getName() %>.<%=columnout.getLabel() %>;
<%
								}
%>
                                <%=connout.getName() %>.ADDRESSDOCTOR_FORMATTED_ADDRESS = result_<%=cid %>.getAddress().getFormattedAddress();
                                <%=connout.getName() %>.ADDRESSDOCTOR_CONTACT = result_<%=cid %>.getAddress().getContact();
                                <%=connout.getName() %>.ADDRESSDOCTOR_DEPARTMENT = result_<%=cid %>.getAddress().getDepartment();
                                <%=connout.getName() %>.ADDRESSDOCTOR_ORGANIZATION = result_<%=cid %>.getAddress().getOrganization();
                                <%=connout.getName() %>.ADDRESSDOCTOR_DELIVERY_ADDRESS_LINES = result_<%=cid %>.getAddress().getDeliveryAddressLines();
                                <%=connout.getName() %>.ADDRESSDOCTOR_BUILDING = result_<%=cid %>.getAddress().getBuilding();
                                <%=connout.getName() %>.ADDRESSDOCTOR_HOUSE_NUMBER = result_<%=cid %>.getAddress().getHouseNumber();
                                <%=connout.getName() %>.ADDRESSDOCTOR_STREET = result_<%=cid %>.getAddress().getStreet();
                                <%=connout.getName() %>.ADDRESSDOCTOR_POSTAL_CODE = result_<%=cid %>.getAddress().getPostalCode();
                                <%=connout.getName() %>.ADDRESSDOCTOR_LOCALITY = result_<%=cid %>.getAddress().getLocality();
                                <%=connout.getName() %>.ADDRESSDOCTOR_COUNTRY_SPECIFIC_LOCALITY = result_<%=cid %>.getAddress().getCountrySpecificLocalityLine();
                                <%=connout.getName() %>.ADDRESSDOCTOR_POBOX = result_<%=cid %>.getAddress().getPOBox();
                                <%=connout.getName() %>.ADDRESSDOCTOR_PROVINCE = result_<%=cid %>.getAddress().getProvince();
                                <%=connout.getName() %>.ADDRESSDOCTOR_COUNTRY = result_<%=cid %>.getAddress().getCountry();
<%
							}
						}
					}
%>
					nb_line_<%=cid %>++;
<%
				}
			}
		}
	}
%>