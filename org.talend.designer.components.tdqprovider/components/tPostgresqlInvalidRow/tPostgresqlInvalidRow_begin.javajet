<%@ jet 
imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser 
		org.talend.core.model.metadata.IMetadataTable 
		org.talend.core.model.metadata.IMetadataColumn
		org.talend.designer.codegen.config.CodeGeneratorArgument
		org.talend.core.model.process.IConnection
		org.talend.core.model.process.IConnectionCategory
		org.talend.core.model.metadata.builder.database.ExtractMetaDataUtils
		org.talend.core.model.metadata.types.JavaTypesManager
		org.talend.core.model.metadata.types.JavaType
		java.util.Map
		java.util.List
" 
%>

<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();	
	String dbhost = ElementParameterParser.getValue(node, "__HOST__");
	String dbport = ElementParameterParser.getValue(node, "__PORT__");
	String dbname= ElementParameterParser.getValue(node, "__DBNAME__");
	String localServiceName = ElementParameterParser.getValue(node, "__LOCAL_SERVICE_NAME__");

	String schemaDb= ElementParameterParser.getValue(node, "__SCHEMA_DB__");
	String dbuser= ElementParameterParser.getValue(node, "__USER__");
	String dbpwd= ElementParameterParser.getValue(node, "__PASS__");
	String dbencoding= ElementParameterParser.getValue(node, "__ENCODING__");

	String table= ElementParameterParser.getValue(node, "__TABLE__");
    String analyzedColumn= ElementParameterParser.getValue(node, "__ANALYZED_COLUMN__");
	String customPattern= ElementParameterParser.getValue(node, "__CUSTOM_PATTERN__");
    String patternList= ElementParameterParser.getValue(node, "__PATTERN_LIST__");
	String dqPattern= ElementParameterParser.getValue(node, "__DQ_PATTERN__");
	
   boolean whetherTrimAllCol = ElementParameterParser.getValue(node, "__TRIM_ALL_COLUMN__").equals("true");
    List<Map<String, String>> trimColumnList = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node, "__TRIM_COLUMN__");
    	   
	List<IMetadataTable> metadatas = node.getMetadataList();
	if ((metadatas != null) && (metadatas.size() > 0)) {
		IMetadataTable metadata = metadatas.get(0);
		if (metadata != null) {
		    %>
		    int nb_line_<%=cid%> = 0;
		    java.sql.Connection conn_<%=cid%> = null;
		    <%
		    String useExistingConn = ElementParameterParser.getValue(node,"__USE_EXISTING_CONNECTION__");
            if(useExistingConn.equals("true")) {
            	String connection = ElementParameterParser.getValue(node,"__CONNECTION__");
            	String conn = "conn_" + connection;
            	%>
            	conn_<%=cid%> = (java.sql.Connection)globalMap.get("<%=conn%>");
            	<%
            } else {
            	%>
                java.lang.Class.forName("org.postgresql.Driver");    
                String url_<%=cid %> = "jdbc:postgresql://" + <%=dbhost%> + ":" + <%=dbport%> + "/" + <%=dbname%>;    
                String dbUser_<%=cid %> = <%=dbuser%>;    
                String dbPwd_<%=cid %> = <%=dbpwd%>;    
                conn_<%=cid%> = java.sql.DriverManager.getConnection(url_<%=cid %>,dbUser_<%=cid%>,dbPwd_<%=cid%>);	
            	<%
            }
            %>
            java.sql.Statement stmt_<%=cid %> = conn_<%=cid%>.createStatement();
			String dbquery;
			if(<%= customPattern %>){
				dbquery = new String("SELECT * FROM \""+<%= schemaDb %>+"\".\""+<%= table %>+"\" WHERE \"<%= analyzedColumn %>\" !~ "+<%= dqPattern %>+" OR <%= analyzedColumn %> IS NULL");
			} else {
				dbquery = new String("SELECT * FROM \""+<%= schemaDb %>+"\".\""+<%= table %>+"\" WHERE \"<%= analyzedColumn %>\" !~ <%= patternList %> OR <%= analyzedColumn %> IS NULL");
			}

            java.sql.ResultSet rs_<%=cid %> = stmt_<%=cid %>.executeQuery(dbquery);
            java.sql.ResultSetMetaData rsmd_<%=cid %> = rs_<%=cid %>.getMetaData();
            int colQtyInRs_<%=cid%> = rsmd_<%=cid %>.getColumnCount();
            globalMap.put("<%=cid %>_QUERY",dbquery);
            <%
            List< ? extends IConnection> conns = node.getOutgoingSortedConnections();
            List<IMetadataColumn> columnList = metadata.getListColumns();
            %>
            String tmpContent_<%=cid%> = null;
            while (rs_<%=cid %>.next()) {
                nb_line_<%=cid%>++;
                <%
                if(conns != null && conns.size() > 0) {
                 	IConnection conn = conns.get(0);
                 	String firstConnName = conn.getName();
                 	int currentColNo = 1;
                 	for(IMetadataColumn column : columnList) { 	
                        boolean whetherTrimCol = false;
                        if((trimColumnList != null && trimColumnList.size() > 0) && !whetherTrimAllCol) {
                            for(Map<String, String> trimColumn : trimColumnList) {
                                if(column.getLabel().equals(trimColumn.get("SCHEMA_COLUMN"))) {
                                    if(trimColumn.get("TRIM").equals("true")) {
                                        whetherTrimCol = true;
                                        break;
                                    }
                                }
                            }
                        }
                        String trimMethod = "";
                        if(whetherTrimAllCol || whetherTrimCol) {
                            trimMethod = ".trim()";
                        }
                        String columnType = column.getType();
                 	    String typeToGenerate = JavaTypesManager.getTypeToGenerate(column.getTalendType(), column.isNullable());
                 	    String defVal = JavaTypesManager.getDefaultValueFromJavaType(typeToGenerate); 	
                 	    if(conn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {
                 	        %> 	
                 	        if(colQtyInRs_<%=cid%> < <%=currentColNo%>) { 		
                 	            <%=firstConnName%>.<%=column.getLabel()%> = <%=defVal%>; 			
                 	        } else {
                 	            <%
                 	            if(typeToGenerate.equals("byte[]")) {
                 	                typeToGenerate = "Bytes";
                 	            } else if(typeToGenerate.equals("java.util.Date")) {
                 	                typeToGenerate = "Timestamp";
                 	            } else if(typeToGenerate.equals("Integer")) {
                 	                typeToGenerate = "Int";
                 	            } else {
                 	                typeToGenerate=typeToGenerate.substring(0,1).toUpperCase()+typeToGenerate.substring(1);
                 	            }		  
                 	            if(typeToGenerate.equals("Char") || typeToGenerate.equals("Character")) {
                 	                %>
                 	                tmpContent_<%=cid%> = rs_<%=cid %>.getString(<%=currentColNo%>);
                                    <%
                                    if(whetherTrimAllCol || whetherTrimCol) {
                                        %>
                                        if(tmpContent_<%=cid%> != null) {
                                            tmpContent_<%=cid%> = tmpContent_<%=cid%><%=trimMethod%>;
                                        }
                                        <%
                                    }
                                    %>                 	                
                 	                if(tmpContent_<%=cid%> != null && tmpContent_<%=cid%>.length() > 0) {			  	
                 	                    <%=firstConnName%>.<%=column.getLabel()%> = tmpContent_<%=cid%>.charAt(0);			  		
                 	                } else {			  	
                 	                    <%
                 	                    if(typeToGenerate.equals("Character")) {
                 	                        %>			  	    
                 	                        if(tmpContent_<%=cid%> == null) {			  	   	
                 	                            <%=firstConnName%>.<%=column.getLabel()%> = null;			  			
                 	                        } else {			  		
                 	                            <%=firstConnName%>.<%=column.getLabel()%> = '\0';			  			
                 	                        }
                 	                        <%
                 	                    } else {
                 	                        %>			  		
                 	                        if(tmpContent_<%=cid%>.equals("")) {			  		
                 	                            <%=firstConnName%>.<%=column.getLabel()%> = '\0';			  			
                 	                        } else {			  		
                        			  			throw new RuntimeException(
                        							"Value is empty for column : '<%=column.getLabel()%>' in '<%=firstConnName%>' connection, value is invalid or this column should be nullable or have a default value.");							
                 	                        }
                 	                        <%
                 	                    }
                 	                    %>
                 	                }			
                 	                <% 	
                 	            } else if(typeToGenerate.equals("Timestamp")) {
                 	                %>
                 	                if(rs_<%=cid %>.getTimestamp(<%=currentColNo%>) != null) {
                 	                    <%=firstConnName%>.<%=column.getLabel()%> = new java.util.Date(rs_<%=cid %>.getTimestamp(<%=currentColNo%>).getTime());
                 	                } else {
                 	                    <%=firstConnName%>.<%=column.getLabel()%> = null;
                 	                }
                 	                <%
                 	            } else if (typeToGenerate.equals("List")) {
                 	                %>
                 	                <%=firstConnName%>.<%=column.getLabel()%> = (List)rs_<%=cid %>.getObject(<%=currentColNo%>);
                 	                <% 	
                 	            } else if(typeToGenerate.equals("String")) {
                 	                %>
                                    tmpContent_<%=cid%> = rs_<%=cid %>.getString(<%=currentColNo%>);
                                    if(tmpContent_<%=cid%> != null) {
                                        <%=firstConnName%>.<%=column.getLabel()%> = tmpContent_<%=cid%><%=trimMethod%>;
                                    } else {
                                        <%=firstConnName%>.<%=column.getLabel()%> = null;
                                    }                 	                
                 	                <%
                 	            } else if(typeToGenerate.equals("Object") && columnType.equals("CLOB")) {
                 	                %>
                 	                if(rs_<%=cid %>.getObject(<%=currentColNo%>) != null) {
                 	                    java.sql.Clob temp<%=column.getLabel()%> = null;
                 	                    temp<%=column.getLabel()%> = rs_<%=cid %>.getClob(<%=currentColNo%>);
                 	                    <%=firstConnName%>.<%=column.getLabel()%> = temp<%=column.getLabel()%>.getSubString(1, (int) temp<%=column.getLabel()%>.length());
                 	                } else {
                 	                    <%=firstConnName%>.<%=column.getLabel()%> = null;
                 	                }
                 	                <%
                 	            } else {
                 	            	if(typeToGenerate.equals("Object")){
                 	            	%>
                 	            	Object tmpObj_<%=currentColNo%>_<%=cid %> = rs_<%=cid %>.getObject(<%=currentColNo%>);
                 	            	if(tmpObj_<%=currentColNo%>_<%=cid %> != null) {
                 	                    <%=firstConnName%>.<%=column.getLabel()%> = tmpObj_<%=currentColNo%>_<%=cid %>;
                 	                } else {
                 	                    <%
                 	                    if(column.isNullable()) {
                 	                        %>
                 	                        <%=firstConnName%>.<%=column.getLabel()%> = null;
                 	                        <%
                 	                    } else {
                 	                        %>    
                 	                        throw new RuntimeException("Null value in non-Nullable column");
                 	                        <%    
                 	                    }
                 	                    %>
                 	                }
                 	            	<%
                 	            	} else {
                 	                %>
                 	                if(rs_<%=cid %>.getObject(<%=currentColNo%>) != null) {
                 	                    <%=firstConnName%>.<%=column.getLabel()%> = rs_<%=cid %>.get<%=typeToGenerate%>(<%=currentColNo%>);
                 	                } else {
                 	                    <%
                 	                    if(column.isNullable()) {
                 	                        %>
                 	                        <%=firstConnName%>.<%=column.getLabel()%> = null;
                 	                        <%
                 	                    } else {
                 	                        %>    
                 	                        throw new RuntimeException("Null value in non-Nullable column");
                 	                        <%    
                 	                    }
                 	                    %>
                 	                }
                 	                <%
                 	                }
                 	            }
                 	            %>
                 	        } 		
                 	        <%  
                 	        currentColNo++;
                 	    }
                 	}
                 	if(conns.size() > 1) {
                 	    for(int connNO = 1 ; connNO < conns.size() ; connNO++) {
                 	        IConnection conn2 = conns.get(connNO);
                 	        if((conn2.getName().compareTo(firstConnName) != 0) && (conn2.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA))) {
                 	            for(IMetadataColumn column : columnList) {
                 	                %>
                 	                <%=conn2.getName()%>.<%=column.getLabel()%>=<%=firstConnName%>.<%=column.getLabel()%>;
                 	                <% 
                 	            }
                 	        }
                 	    }
                 	}
                }
		}
	}
%>

